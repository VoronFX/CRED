
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
			
using System.Collections.Generic;
// ReSharper disable InconsistentNaming

namespace CRED.Client.AzureResources
{
    
    public sealed class ResourceMap : ResourceDirectoryBase
    {
        
        public ResourceMap(IResourceDirectory parentDirectory)
        	: base(null, parentDirectory)
        {
        }
    }
    
    namespace Directories
    {
    }
    
    public interface IResourceDirectory
    {
    	IReadOnlyDictionary<string, IResourceFile> Files { get; }
    	IReadOnlyDictionary<string, IResourceDirectory> Directories { get; }
    	string Name { get; }
    	IResourceDirectory ParentDirectory { get; }
    }
    
    public interface IResourceFile
    {
    	string Name { get; }
    	string Hash { get; }
    	IResourceDirectory ContainingDirectory { get; }
    }
    
    internal sealed class ResourceFile : IResourceFile
    {
    	internal ResourceFile(string name, string hash, IResourceDirectory containingDirectory)
    	{
    		Name = name;
    		Hash = hash;
    		ContainingDirectory = containingDirectory;
    	}
    
    	public string Name { get; }
    	public string Hash { get; }
    	public IResourceDirectory ContainingDirectory { get; }
    }
    
    public abstract class ResourceDirectoryBase : IResourceDirectory
    {
    	protected internal readonly Dictionary<string, IResourceFile> files
    		= new Dictionary<string, IResourceFile>();
    	protected internal readonly Dictionary<string, IResourceDirectory> directories
    		= new Dictionary<string, IResourceDirectory>();
    	protected internal readonly IResourceDirectory parentDirectory;
    	protected internal readonly string name;
    
    	protected internal ResourceDirectoryBase(string name, IResourceDirectory parentDirectory)
    	{
    		this.parentDirectory = parentDirectory;
    		this.name = name;
    	}
    
    	string IResourceDirectory.Name => name;
    
    	IResourceDirectory IResourceDirectory.ParentDirectory => parentDirectory;
    
    	IReadOnlyDictionary<string, IResourceFile> IResourceDirectory.Files => files;
    
    	IReadOnlyDictionary<string, IResourceDirectory> IResourceDirectory.Directories => directories;
    
    }
    			
}
