<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ IntelliSenseLanguage processor="tangibleT4Editor" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml"#>
<#@ assembly name="System.Xml.Linq"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ output extension=".cs" #>
<#@ include file=".\TaskDefinitions.ttinclude" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<#
	Write(File.ReadAllText(Host.ResolvePath(Path.GetFileNameWithoutExtension(Host.TemplateFile) + ".Prototype.cs"))
	.Replace("namespace Prototype", "namespace Wrapper"));
#>

namespace CRED.BuildTasks
{
<#
	foreach (var task in tasks)
	{
		WriteTask(task);
	}
#>
}
<#+
	private void WriteTask(Task task)
	{
#>

		[Serializable]
		public class <#= task.Name #> : TaskWrapperBase
		{
<#+
			foreach (var parameter in task)
			{
				if (parameter.Required)
				{
				#>
				[Required]
<#+
				}

				#>
				[XmlElement]
				public <#= parameter.Type.FullName #> <#= parameter.Name #> { get; set; }
	
<#+
			
			}
#>		}
<#+
	}
#>