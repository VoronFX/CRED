using System.Linq;
using Bridge.NET.Test.Helpers;
using Bridge.React;

namespace Bridge.NET.Test.Components.Azure.Resources
{
	//private enum FxsContainerClasses { FxsPortal, DesktopNormal, FxsShowStartboard }
	public sealed partial class FxsClasses
	{
		// Check for typos
		//static Fxs()
		//{
		//	foreach (var property in typeof(Fxs).GetProperties())
		//	{
		//		if ((string)property.GetValue(typeof(Fxs)) != nameof(Fxs) + property.Name)
		//		{
		//			throw new ArgumentException($"Property name of \"{property.GetValue(typeof(Fxs))}\""
		//									  + $" not equal to \"{nameof(Fxs) + property.Name} \". Possible typo was made.");
		//		}
		//	}
		//}
		public static string SelectClasses(params string[] names)
			=> string.Join(" ", names.Select(x => x.ToLower()));

		private static string Compose(string name)
			=> nameof(Fxs) + "-" + name.ToCssClassName();

		//private static string Compose(params string[] names)
		//	=> names.Select(x => x.ToCssClassName())
		//	.ToJoinedString("-").ToCssClassName();
	}

	public sealed partial class FxsClasses
	{
		/*		public string Accent { get; } = Compose(nameof(Accent));
				public string Avatarmenu { get; } = Compose(nameof(Avatarmenu));
				public string AvatarmenuBilling { get; } = Compose(nameof(AvatarmenuBilling));
				public string AvatarmenuChangepassword { get; } = Compose(nameof(AvatarmenuChangepassword));
				public string AvatarmenuDropdown { get; } = Compose(nameof(AvatarmenuDropdown));
				public string AvatarmenuDropdownTitle { get; } = Compose(nameof(AvatarmenuDropdownTitle));
				public string AvatarmenuFeedback { get; } = Compose(nameof(AvatarmenuFeedback));
				public string AvatarmenuHeader { get; } = Compose(nameof(AvatarmenuHeader));
				public string AvatarmenuListSystem { get; } = Compose(nameof(AvatarmenuListSystem));
				public string AvatarmenuListTenant { get; } = Compose(nameof(AvatarmenuListTenant));
				public string AvatarmenuMyaccess { get; } = Compose(nameof(AvatarmenuMyaccess));
				public string AvatarmenuScrollviewer { get; } = Compose(nameof(AvatarmenuScrollviewer));
				public string AvatarmenuSignout { get; } = Compose(nameof(AvatarmenuSignout));
				public string AvatarmenuTenant { get; } = Compose(nameof(AvatarmenuTenant));
				public string AvatarmenuTenantContainer { get; } = Compose(nameof(AvatarmenuTenantContainer));
				public string AvatarmenuTenantImage { get; } = Compose(nameof(AvatarmenuTenantImage));
				public string AvatarmenuTenantName { get; } = Compose(nameof(AvatarmenuTenantName));
				public string AvatarmenuTenantUri { get; } = Compose(nameof(AvatarmenuTenantUri));
				public string AvatarmenuUsername { get; } = Compose(nameof(AvatarmenuUsername));
				public string BgDirty { get; } = Compose(nameof(BgDirty));
				public string BgError { get; } = Compose(nameof(BgError));
				public string BgInfo { get; } = Compose(nameof(BgInfo));
				public string BgNone { get; } = Compose(nameof(BgNone));
				public string BgOverlayDark { get; } = Compose(nameof(BgOverlayDark));
				public string BgPrimary { get; } = Compose(nameof(BgPrimary));
				public string BgSuccess { get; } = Compose(nameof(BgSuccess));
				public string BgUpsell { get; } = Compose(nameof(BgUpsell));
				public string BgWarning { get; } = Compose(nameof(BgWarning));
				public string BgWhite { get; } = Compose(nameof(BgWhite));
				public string Blade { get; } = Compose(nameof(Blade));
				public string BladeAction { get; } = Compose(nameof(BladeAction));
				public string BladeActions { get; } = Compose(nameof(BladeActions));
				public string BladeActivationstyle { get; } = Compose(nameof(BladeActivationstyle));
				public string BladeAppblade { get; } = Compose(nameof(BladeAppblade));
				public string BladeBorder { get; } = Compose(nameof(BladeBorder));
				public string BladeClose { get; } = Compose(nameof(BladeClose));
				public string BladeCommand { get; } = Compose(nameof(BladeCommand));
				public string Bladecontent { get; } = Compose(nameof(Bladecontent));
				public string BladeContent { get; } = Compose(nameof(BladeContent));
				public string BladeContentContainer { get; } = Compose(nameof(BladeContentContainer));
				public string BladeContentContainerDefault { get; } = Compose(nameof(BladeContentContainerDefault));
				public string BladeContentContainerDetails { get; } = Compose(nameof(BladeContentContainerDetails));
				public string BladecontentProgress { get; } = Compose(nameof(BladecontentProgress));
				public string BladecontentUnlocked { get; } = Compose(nameof(BladecontentUnlocked));
				public string BladeContentWrapper { get; } = Compose(nameof(BladeContentWrapper));
				public string BladeDialoghost { get; } = Compose(nameof(BladeDialoghost));
				public string BladeDisabled { get; } = Compose(nameof(BladeDisabled));
				public string BladeDisabledMessage { get; } = Compose(nameof(BladeDisabledMessage));
				public string BladeHasActivation { get; } = Compose(nameof(BladeHasActivation));
				public string BladeHeader { get; } = Compose(nameof(BladeHeader));
				public string BladeHeaderIcon { get; } = Compose(nameof(BladeHeaderIcon));
				public string BladeInitializing { get; } = Compose(nameof(BladeInitializing));
				public string BladeLoaded { get; } = Compose(nameof(BladeLoaded));
				public string BladeLocked { get; } = Compose(nameof(BladeLocked));
				public string BladeMaximize { get; } = Compose(nameof(BladeMaximize));
				public string BladeMaximized { get; } = Compose(nameof(BladeMaximized));
				public string BladePairdetails { get; } = Compose(nameof(BladePairdetails));
				public string BladePaired { get; } = Compose(nameof(BladePaired));
				public string BladePairedCollapsed { get; } = Compose(nameof(BladePairedCollapsed));
				public string BladePairedMediummaster { get; } = Compose(nameof(BladePairedMediummaster));
				public string BladePairFullscreen { get; } = Compose(nameof(BladePairFullscreen));
				public string BladePairmaster { get; } = Compose(nameof(BladePairmaster));
				public string BladePin { get; } = Compose(nameof(BladePin));
				public string BladeProgress { get; } = Compose(nameof(BladeProgress));
				public string BladeProgressTranslucent { get; } = Compose(nameof(BladeProgressTranslucent));
				public string BladeShieldTranslucent { get; } = Compose(nameof(BladeShieldTranslucent));
				public string BladesizeMenu { get; } = Compose(nameof(BladesizeMenu));
				public string BladesizeSmall { get; } = Compose(nameof(BladesizeSmall));
				public string BladeStacklayout { get; } = Compose(nameof(BladeStacklayout));
				public string BladeStatusArrow { get; } = Compose(nameof(BladeStatusArrow));
				public string BladeStatusbar { get; } = Compose(nameof(BladeStatusbar));
				public string BladeStatusbarText { get; } = Compose(nameof(BladeStatusbarText));
				public string BladeStatusbarWrapper { get; } = Compose(nameof(BladeStatusbarWrapper));
				public string BladeStatusbg { get; } = Compose(nameof(BladeStatusbg));
				public string BladeStatusContainer { get; } = Compose(nameof(BladeStatusContainer));
				public string BladeStatusIcon { get; } = Compose(nameof(BladeStatusIcon));
				public string BladeStatusTextContainer { get; } = Compose(nameof(BladeStatusTextContainer));
				public string BladestyleApp { get; } = Compose(nameof(BladestyleApp));
				public string BladestyleBasic { get; } = Compose(nameof(BladestyleBasic));
				public string BladestyleBasicwithcommands { get; } = Compose(nameof(BladestyleBasicwithcommands));
				public string BladestyleContext { get; } = Compose(nameof(BladestyleContext));
				public string BladestyleContextaction { get; } = Compose(nameof(BladestyleContextaction));
				public string BladestyleCreate { get; } = Compose(nameof(BladestyleCreate));
				public string BladestyleHelp { get; } = Compose(nameof(BladestyleHelp));
				public string BladestyleHub { get; } = Compose(nameof(BladestyleHub));
				public string BladestyleHubsubmenu { get; } = Compose(nameof(BladestyleHubsubmenu));
				public string BladeSummaryContainer { get; } = Compose(nameof(BladeSummaryContainer));
				public string BladeTitle { get; } = Compose(nameof(BladeTitle));
				public string BladeTitleContent { get; } = Compose(nameof(BladeTitleContent));
				public string BladeTitleDescription { get; } = Compose(nameof(BladeTitleDescription));
				public string BladeTitleHelpIcon { get; } = Compose(nameof(BladeTitleHelpIcon));
				public string BladeTitleHelpLink { get; } = Compose(nameof(BladeTitleHelpLink));
				public string BladeTitleImage { get; } = Compose(nameof(BladeTitleImage));
				public string BladeUnauthorized { get; } = Compose(nameof(BladeUnauthorized));
				public string BladeWithcolumns { get; } = Compose(nameof(BladeWithcolumns));
				public string BoxWrapper { get; } = Compose(nameof(BoxWrapper));
				public string BrDirty { get; } = Compose(nameof(BrDirty));
				public string Breadcrumb { get; } = Compose(nameof(Breadcrumb));
				public string BreadcrumbCrumb { get; } = Compose(nameof(BreadcrumbCrumb));
				public string BreadcrumbDivider { get; } = Compose(nameof(BreadcrumbDivider));
				public string BreadcrumbDropmenu { get; } = Compose(nameof(BreadcrumbDropmenu));
				public string BreadcrumbOverflow { get; } = Compose(nameof(BreadcrumbOverflow));
				public string BreadcrumbWrapper { get; } = Compose(nameof(BreadcrumbWrapper));
				public string BrError { get; } = Compose(nameof(BrError));
				public string BrInfo { get; } = Compose(nameof(BrInfo));
				public string BrPrimary { get; } = Compose(nameof(BrPrimary));
				public string BrSuccess { get; } = Compose(nameof(BrSuccess));
				public string BrWarning { get; } = Compose(nameof(BrWarning));
				public string Button { get; } = Compose(nameof(Button));
				public string ButtonDefault { get; } = Compose(nameof(ButtonDefault));
				public string ButtonDisabled { get; } = Compose(nameof(ButtonDisabled));
				public string CanUseMultiline { get; } = Compose(nameof(CanUseMultiline));
				public string Command { get; } = Compose(nameof(Command));
				public string CommandsContext { get; } = Compose(nameof(CommandsContext));
				public string Context { get; } = Compose(nameof(Context));
				public string ContextbladePlaceholder { get; } = Compose(nameof(ContextbladePlaceholder));
				public string Contextpane { get; } = Compose(nameof(Contextpane));
				public string ContextpaneButtonInner { get; } = Compose(nameof(ContextpaneButtonInner));
				public string ContextpaneClose { get; } = Compose(nameof(ContextpaneClose));
				public string ContextpaneContent { get; } = Compose(nameof(ContextpaneContent));
				public string ContextpaneExpand { get; } = Compose(nameof(ContextpaneExpand));
				public string ContextpaneLoading { get; } = Compose(nameof(ContextpaneLoading));
				public string ContextpaneVisible { get; } = Compose(nameof(ContextpaneVisible));
				public string Copyfield { get; } = Compose(nameof(Copyfield));
				public string CopyfieldContainer { get; } = Compose(nameof(CopyfieldContainer));
				public string CopyfieldCopied { get; } = Compose(nameof(CopyfieldCopied));
				public string CopyfieldWrapper { get; } = Compose(nameof(CopyfieldWrapper));
				public string Cross { get; } = Compose(nameof(Cross));
				public string DesktopNormal { get; } = Compose(nameof(DesktopNormal));
				public string DesktopOrganize { get; } = Compose(nameof(DesktopOrganize));
				public string Dialogballoon { get; } = Compose(nameof(Dialogballoon));
				public string DisplayNone { get; } = Compose(nameof(DisplayNone));
				public string DragDisable { get; } = Compose(nameof(DragDisable));
				public string DragSurface { get; } = Compose(nameof(DragSurface));
				public string Dropmenu { get; } = Compose(nameof(Dropmenu));
				public string DropmenuButton { get; } = Compose(nameof(DropmenuButton));
				public string DropmenuContent { get; } = Compose(nameof(DropmenuContent));
				public string DropmenuDefault { get; } = Compose(nameof(DropmenuDefault));
				public string DropmenuExtend { get; } = Compose(nameof(DropmenuExtend));
				public string DropmenuHidden { get; } = Compose(nameof(DropmenuHidden));
				public string DropmenuImage { get; } = Compose(nameof(DropmenuImage));
				public string DropmenuInvisible { get; } = Compose(nameof(DropmenuInvisible));
				public string DropmenuLeft { get; } = Compose(nameof(DropmenuLeft));
				public string DropmenuLineSeparator { get; } = Compose(nameof(DropmenuLineSeparator));
				public string DropmenuListContent { get; } = Compose(nameof(DropmenuListContent));
				public string DropmenuListSystem { get; } = Compose(nameof(DropmenuListSystem));
				public string DropmenuRight { get; } = Compose(nameof(DropmenuRight));
				public string Ellipsis { get; } = Compose(nameof(Ellipsis));
				public string Errorpart { get; } = Compose(nameof(Errorpart));
				public string ErrorpartClickable { get; } = Compose(nameof(ErrorpartClickable));
				public string ExtensionFrame { get; } = Compose(nameof(ExtensionFrame));
				public string FillDirty { get; } = Compose(nameof(FillDirty));
				public string FillError { get; } = Compose(nameof(FillError));
				public string FillInfo { get; } = Compose(nameof(FillInfo));
				public string FillSuccess { get; } = Compose(nameof(FillSuccess));
				public string FillUpsell { get; } = Compose(nameof(FillUpsell));
				public string FillWarning { get; } = Compose(nameof(FillWarning));
				public string FillWhite { get; } = Compose(nameof(FillWhite));
				public string Flowlayout { get; } = Compose(nameof(Flowlayout));
				public string FlowlayoutChildcontainer { get; } = Compose(nameof(FlowlayoutChildcontainer));
				public string FlowlayoutDropPlaceholder { get; } = Compose(nameof(FlowlayoutDropPlaceholder));
				public string FlowlayoutElement { get; } = Compose(nameof(FlowlayoutElement));
				public string FlowlayoutLivepreview { get; } = Compose(nameof(FlowlayoutLivepreview));
				public string FlowlayoutResizehandle { get; } = Compose(nameof(FlowlayoutResizehandle));
				public string FlowlayoutResolutionguide { get; } = Compose(nameof(FlowlayoutResolutionguide));
				public string Formdialog { get; } = Compose(nameof(Formdialog));
				public string FormdialogButtons { get; } = Compose(nameof(FormdialogButtons));
				public string FormdialogDescription { get; } = Compose(nameof(FormdialogDescription));
				public string FormdialogForm { get; } = Compose(nameof(FormdialogForm));
				public string FormdialogHeader { get; } = Compose(nameof(FormdialogHeader));
				public string FullHeight { get; } = Compose(nameof(FullHeight));
				public string FullWidth { get; } = Compose(nameof(FullWidth));
				public string GraphFill { get; } = Compose(nameof(GraphFill));
				public string HasHover { get; } = Compose(nameof(HasHover));
				public string HelpmenuKeyboardshortcuts { get; } = Compose(nameof(HelpmenuKeyboardshortcuts));
				public string HelpmenuLegal { get; } = Compose(nameof(HelpmenuLegal));
				public string HelpmenuManageSupportRequests { get; } = Compose(nameof(HelpmenuManageSupportRequests));
				public string HelpmenuShowDiagnostics { get; } = Compose(nameof(HelpmenuShowDiagnostics));
				public string HelpmenuSupport { get; } = Compose(nameof(HelpmenuSupport));
				public string HelpmenuSupportRequest { get; } = Compose(nameof(HelpmenuSupportRequest));
				public string HelpmenuWelcomesequence { get; } = Compose(nameof(HelpmenuWelcomesequence));
				public string HiddenImportant { get; } = Compose(nameof(HiddenImportant));
				public string HideAccessibleLabel { get; } = Compose(nameof(HideAccessibleLabel));
				public string HideInCustomize { get; } = Compose(nameof(HideInCustomize));
				public string HideInNormal { get; } = Compose(nameof(HideInNormal));
				public string Highlight { get; } = Compose(nameof(Highlight));
				public string Hub { get; } = Compose(nameof(Hub));
				public string Icon { get; } = Compose(nameof(Icon));
				public string Indicator { get; } = Compose(nameof(Indicator));
				public string IndicatorAnimated { get; } = Compose(nameof(IndicatorAnimated));
				public string Input { get; } = Compose(nameof(Input));
				public string IsFavorite { get; } = Compose(nameof(IsFavorite));
				public string IsHome { get; } = Compose(nameof(IsHome));
				public string IsSelected { get; } = Compose(nameof(IsSelected));
				public string Journey { get; } = Compose(nameof(Journey));
				public string JourneyBreadcrumbOverflow { get; } = Compose(nameof(JourneyBreadcrumbOverflow));
				public string JourneyLayout { get; } = Compose(nameof(JourneyLayout));
				public string Journeys { get; } = Compose(nameof(Journeys));
				public string JourneysmenuContent { get; } = Compose(nameof(JourneysmenuContent));
				public string JourneysmenuJourney { get; } = Compose(nameof(JourneysmenuJourney));
				public string JourneysmenuJourneyContent { get; } = Compose(nameof(JourneysmenuJourneyContent));
				public string JourneysmenuJourneyNodata { get; } = Compose(nameof(JourneysmenuJourneyNodata));
				public string JourneysmenuJourneyNodataContent { get; } = Compose(nameof(JourneysmenuJourneyNodataContent));
				public string JourneysmenuJourneyWrapper { get; } = Compose(nameof(JourneysmenuJourneyWrapper));
				public string JourneysmenuList { get; } = Compose(nameof(JourneysmenuList));
				public string JourneyTarget { get; } = Compose(nameof(JourneyTarget));
				public string JourneyWithspacer { get; } = Compose(nameof(JourneyWithspacer));
				public string Keyboardshortcuts { get; } = Compose(nameof(Keyboardshortcuts));
				public string KeyboardshortcutsCategory { get; } = Compose(nameof(KeyboardshortcutsCategory));
				public string KeyboardshortcutsKey { get; } = Compose(nameof(KeyboardshortcutsKey));
				public string KeyboardshortcutsShortcut { get; } = Compose(nameof(KeyboardshortcutsShortcut));
				public string Lens { get; } = Compose(nameof(Lens));
				public string LensButtonCollapse { get; } = Compose(nameof(LensButtonCollapse));
				public string LensCollapsed { get; } = Compose(nameof(LensCollapsed));
				public string LensFit { get; } = Compose(nameof(LensFit));
				public string LensLayout { get; } = Compose(nameof(LensLayout));
				public string LensLayoutFlow { get; } = Compose(nameof(LensLayoutFlow));
				public string LensTitle { get; } = Compose(nameof(LensTitle));
				public string LensTitleContainer { get; } = Compose(nameof(LensTitleContainer));
				public string LensTitleHr { get; } = Compose(nameof(LensTitleHr));
				public string Listpopup { get; } = Compose(nameof(Listpopup));
				public string ListpopupItem { get; } = Compose(nameof(ListpopupItem));
				public string ListpopupList { get; } = Compose(nameof(ListpopupList));
				public string Loading { get; } = Compose(nameof(Loading));
				public string ManifestFrame { get; } = Compose(nameof(ManifestFrame));
				public string Menu { get; } = Compose(nameof(Menu));
				public string MenuAccount { get; } = Compose(nameof(MenuAccount));
				public string MenuBrowse { get; } = Compose(nameof(MenuBrowse));
				public string MenuSettings { get; } = Compose(nameof(MenuSettings));
				public string Messagebox { get; } = Compose(nameof(Messagebox));
				public string MessageboxButtons { get; } = Compose(nameof(MessageboxButtons));
				public string MessageboxConfirmation { get; } = Compose(nameof(MessageboxConfirmation));
				public string MessageboxHtml { get; } = Compose(nameof(MessageboxHtml));
				public string MessageboxText { get; } = Compose(nameof(MessageboxText));
				public string MessageboxTitle { get; } = Compose(nameof(MessageboxTitle));
				public string ModeDark { get; } = Compose(nameof(ModeDark));
				public string ModeLight { get; } = Compose(nameof(ModeLight));
				public string NotificationmenuButtonUnreadcount { get; } = Compose(nameof(NotificationmenuButtonUnreadcount));
				public string NotificationmenuButtonUnreadcountCircle { get; } = Compose(nameof(NotificationmenuButtonUnreadcountCircle));
				public string NotificationmenuButtonUnreadcountOval { get; } = Compose(nameof(NotificationmenuButtonUnreadcountOval));
				public string NotificationmenuDropdown { get; } = Compose(nameof(NotificationmenuDropdown));
				public string NotificationmenuIcon { get; } = Compose(nameof(NotificationmenuIcon));
				public string NotificationmenuIndeterminateProgress { get; } = Compose(nameof(NotificationmenuIndeterminateProgress));
				public string NotificationmenuList { get; } = Compose(nameof(NotificationmenuList));
				public string NotificationmenuNotification { get; } = Compose(nameof(NotificationmenuNotification));
				public string NotificationmenuNotificationclick { get; } = Compose(nameof(NotificationmenuNotificationclick));
				public string NotificationmenuNotificationDescription { get; } = Compose(nameof(NotificationmenuNotificationDescription));
				public string NotificationmenuNotificationDetails { get; } = Compose(nameof(NotificationmenuNotificationDetails));
				public string NotificationmenuNotificationDismiss { get; } = Compose(nameof(NotificationmenuNotificationDismiss));
				public string NotificationmenuNotificationExpand { get; } = Compose(nameof(NotificationmenuNotificationExpand));
				public string NotificationmenuNotificationExpanded { get; } = Compose(nameof(NotificationmenuNotificationExpanded));
				public string NotificationmenuNotificationIcon { get; } = Compose(nameof(NotificationmenuNotificationIcon));
				public string NotificationmenuNotificationNodata { get; } = Compose(nameof(NotificationmenuNotificationNodata));
				public string NotificationmenuNotificationNodataContent { get; } = Compose(nameof(NotificationmenuNotificationNodataContent));
				public string NotificationmenuNotificationProgressbar { get; } = Compose(nameof(NotificationmenuNotificationProgressbar));
				public string NotificationmenuNotificationTitle { get; } = Compose(nameof(NotificationmenuNotificationTitle));
				public string NotificationmenuNotificationTitleIcon { get; } = Compose(nameof(NotificationmenuNotificationTitleIcon));
				public string NotificationmenuNotificationTitleProgresstext { get; } = Compose(nameof(NotificationmenuNotificationTitleProgresstext));
				public string NotificationmenuNotificationTitleSubtitle { get; } = Compose(nameof(NotificationmenuNotificationTitleSubtitle));
				public string NotificationmenuNotificationTitleText { get; } = Compose(nameof(NotificationmenuNotificationTitleText));
				public string Notificationspane { get; } = Compose(nameof(Notificationspane));
				public string NotificationspaneButtonUnreadcount { get; } = Compose(nameof(NotificationspaneButtonUnreadcount));
				public string NotificationspaneButtonUnreadcountCircle { get; } = Compose(nameof(NotificationspaneButtonUnreadcountCircle));
				public string NotificationspaneButtonUnreadcountOval { get; } = Compose(nameof(NotificationspaneButtonUnreadcountOval));
				public string NotificationspaneDismiss { get; } = Compose(nameof(NotificationspaneDismiss));
				public string NotificationspaneDismisscontainer { get; } = Compose(nameof(NotificationspaneDismisscontainer));
				public string NotificationspaneDismissitem { get; } = Compose(nameof(NotificationspaneDismissitem));
				public string NotificationspaneDismissitemdisabled { get; } = Compose(nameof(NotificationspaneDismissitemdisabled));
				public string NotificationspaneDismisslist { get; } = Compose(nameof(NotificationspaneDismisslist));
				public string NotificationspaneHeader { get; } = Compose(nameof(NotificationspaneHeader));
				public string NotificationspaneLabel { get; } = Compose(nameof(NotificationspaneLabel));
				public string NotificationspaneList { get; } = Compose(nameof(NotificationspaneList));
				public string NotificationspaneProgressbar { get; } = Compose(nameof(NotificationspaneProgressbar));
				public string NotificationspaneTitle { get; } = Compose(nameof(NotificationspaneTitle));
				public string NotificationspaneTop { get; } = Compose(nameof(NotificationspaneTop));
				public string Nps { get; } = Compose(nameof(Nps));
				public string NpsButtonHolder { get; } = Compose(nameof(NpsButtonHolder));
				public string NpsCheckbox { get; } = Compose(nameof(NpsCheckbox));
				public string NpsComments { get; } = Compose(nameof(NpsComments));
				public string NpsCommentstitle { get; } = Compose(nameof(NpsCommentstitle));
				public string NpsHelp { get; } = Compose(nameof(NpsHelp));
				public string NpsLinkSurvey { get; } = Compose(nameof(NpsLinkSurvey));
				public string NpsScore { get; } = Compose(nameof(NpsScore));
				public string NpsScoreSelected { get; } = Compose(nameof(NpsScoreSelected));
				public string NpsSubmit { get; } = Compose(nameof(NpsSubmit));
				public string NpsSurvey { get; } = Compose(nameof(NpsSurvey));
				public string NpsTitle { get; } = Compose(nameof(NpsTitle));
				public string Overlay { get; } = Compose(nameof(Overlay));
				public string PanningCursor { get; } = Compose(nameof(PanningCursor));
				public string Panorama { get; } = Compose(nameof(Panorama));
				public string PanoramaScrollbounceOnleft { get; } = Compose(nameof(PanoramaScrollbounceOnleft));
				public string PanoramaScrollbounceOnright { get; } = Compose(nameof(PanoramaScrollbounceOnright));
				public string PanoramaScrollbounceReset { get; } = Compose(nameof(PanoramaScrollbounceReset));
				public string Part { get; } = Compose(nameof(Part));
				public string PartAssetpart { get; } = Compose(nameof(PartAssetpart));
				public string PartAssetpartAsset { get; } = Compose(nameof(PartAssetpartAsset));
				public string PartAssetpartBadge { get; } = Compose(nameof(PartAssetpartBadge));
				public string PartAssetpartIcon { get; } = Compose(nameof(PartAssetpartIcon));
				public string PartAssetpartInner { get; } = Compose(nameof(PartAssetpartInner));
				public string PartAssetpartOuter { get; } = Compose(nameof(PartAssetpartOuter));
				public string PartAssetpartStatus { get; } = Compose(nameof(PartAssetpartStatus));
				public string PartAssetpartType { get; } = Compose(nameof(PartAssetpartType));
				public string PartBlockuiShield { get; } = Compose(nameof(PartBlockuiShield));
				public string PartButtonpart { get; } = Compose(nameof(PartButtonpart));
				public string PartButtonpartAdornment { get; } = Compose(nameof(PartButtonpartAdornment));
				public string PartButtonpartAssetname { get; } = Compose(nameof(PartButtonpartAssetname));
				public string PartButtonpartDesc { get; } = Compose(nameof(PartButtonpartDesc));
				public string PartButtonpartExternallink { get; } = Compose(nameof(PartButtonpartExternallink));
				public string PartButtonpartIconcontainer { get; } = Compose(nameof(PartButtonpartIconcontainer));
				public string PartButtonpartInner { get; } = Compose(nameof(PartButtonpartInner));
				public string PartButtonpartInnerPad { get; } = Compose(nameof(PartButtonpartInnerPad));
				public string PartButtonpartTextcontainer { get; } = Compose(nameof(PartButtonpartTextcontainer));
				public string PartButtonpartTitle { get; } = Compose(nameof(PartButtonpartTitle));
				public string PartClickable { get; } = Compose(nameof(PartClickable));
				public string PartCollectionpart { get; } = Compose(nameof(PartCollectionpart));
				public string PartCollectionpartMoreData { get; } = Compose(nameof(PartCollectionpartMoreData));
				public string PartCollectionpartNoRollupCount { get; } = Compose(nameof(PartCollectionpartNoRollupCount));
				public string PartCollectionpartPartTitle { get; } = Compose(nameof(PartCollectionpartPartTitle));
				public string PartCollectionpartRollupContainer { get; } = Compose(nameof(PartCollectionpartRollupContainer));
				public string PartCollectionpartRollupCount { get; } = Compose(nameof(PartCollectionpartRollupCount));
				public string PartCollectionpartRollupForceshow { get; } = Compose(nameof(PartCollectionpartRollupForceshow));
				public string PartCollectionpartRollupIcon { get; } = Compose(nameof(PartCollectionpartRollupIcon));
				public string PartCollectionpartRollupLabel { get; } = Compose(nameof(PartCollectionpartRollupLabel));
				public string PartColorWhite { get; } = Compose(nameof(PartColorWhite));
				public string PartContent { get; } = Compose(nameof(PartContent));
				public string PartError { get; } = Compose(nameof(PartError));
				public string PartErrorContent { get; } = Compose(nameof(PartErrorContent));
				public string PartErrorDevmode { get; } = Compose(nameof(PartErrorDevmode));
				public string PartErrorIcon { get; } = Compose(nameof(PartErrorIcon));
				public string PartErrorReason { get; } = Compose(nameof(PartErrorReason));
				public string PartErrorSubtitle { get; } = Compose(nameof(PartErrorSubtitle));
				public string PartErrorText { get; } = Compose(nameof(PartErrorText));
				public string PartErrorTitle { get; } = Compose(nameof(PartErrorTitle));
				public string PartForTemplateBlade { get; } = Compose(nameof(PartForTemplateBlade));
				public string PartgalleryContainer { get; } = Compose(nameof(PartgalleryContainer));
				public string PartgalleryLoadingStatus { get; } = Compose(nameof(PartgalleryLoadingStatus));
				public string PartgalleryPartscontainer { get; } = Compose(nameof(PartgalleryPartscontainer));
				public string PartgalleryTitle { get; } = Compose(nameof(PartgalleryTitle));
				public string PartgalleryTopcontainer { get; } = Compose(nameof(PartgalleryTopcontainer));
				public string PartIsV { get; } = Compose(nameof(PartIsV));
				public string PartNoaccessmessage { get; } = Compose(nameof(PartNoaccessmessage));
				public string PartNoaccessmessageText { get; } = Compose(nameof(PartNoaccessmessageText));
				public string PartNoaccessmessageTextsmall { get; } = Compose(nameof(PartNoaccessmessageTextsmall));
				public string PartNoaccessmessageWithtitle { get; } = Compose(nameof(PartNoaccessmessageWithtitle));
				public string PartNodata { get; } = Compose(nameof(PartNodata));
				public string PartNodatamessage { get; } = Compose(nameof(PartNodatamessage));
				public string PartNodatamessageText { get; } = Compose(nameof(PartNodatamessageText));
				public string PartNotfound { get; } = Compose(nameof(PartNotfound));
				public string PartNotfoundmessage { get; } = Compose(nameof(PartNotfoundmessage));
				public string PartNotfoundmessageText { get; } = Compose(nameof(PartNotfoundmessageText));
				public string PartPartTitleVisible { get; } = Compose(nameof(PartPartTitleVisible));
				public string PartProperties { get; } = Compose(nameof(PartProperties));
				public string PartPropertiesCopyfield { get; } = Compose(nameof(PartPropertiesCopyfield));
				public string PartPropertiesImage { get; } = Compose(nameof(PartPropertiesImage));
				public string PartPropertiesPropertyWrapped { get; } = Compose(nameof(PartPropertiesPropertyWrapped));
				public string PartPropertiesText { get; } = Compose(nameof(PartPropertiesText));
				public string PartResourcesummary { get; } = Compose(nameof(PartResourcesummary));
				public string PartResourcesummaryBottom { get; } = Compose(nameof(PartResourcesummaryBottom));
				public string PartResourcesummaryShortcuts { get; } = Compose(nameof(PartResourcesummaryShortcuts));
				public string PartSelected { get; } = Compose(nameof(PartSelected));
				public string PartSelectedCommand { get; } = Compose(nameof(PartSelectedCommand));
				public string PartSuccess { get; } = Compose(nameof(PartSuccess));
				public string PartTitle { get; } = Compose(nameof(PartTitle));
				public string Popup { get; } = Compose(nameof(Popup));
				public string PopupButton { get; } = Compose(nameof(PopupButton));
				public string PopupFeedback { get; } = Compose(nameof(PopupFeedback));
				public string Portal { get; } = Compose(nameof(Portal));
				public string PortalBackground { get; } = Compose(nameof(PortalBackground));
				public string PortalBackgroundPrimary { get; } = Compose(nameof(PortalBackgroundPrimary));
				public string PortalBackgroundSecondary { get; } = Compose(nameof(PortalBackgroundSecondary));
				public string PortalBgTxtBr { get; } = Compose(nameof(PortalBgTxtBr));
				public string PortalBorder { get; } = Compose(nameof(PortalBorder));
				public string PortalButtonPrimary { get; } = Compose(nameof(PortalButtonPrimary));
				public string PortalConsole { get; } = Compose(nameof(PortalConsole));
				public string PortalContent { get; } = Compose(nameof(PortalContent));
				public string PortalContextpaneLeft { get; } = Compose(nameof(PortalContextpaneLeft));
				public string PortalContextpaneRight { get; } = Compose(nameof(PortalContextpaneRight));
				public string PortalControlloadfailed { get; } = Compose(nameof(PortalControlloadfailed));
				public string PortalHover { get; } = Compose(nameof(PortalHover));
				public string PortalMain { get; } = Compose(nameof(PortalMain));
				public string PortalSelected { get; } = Compose(nameof(PortalSelected));
				public string PortalShield { get; } = Compose(nameof(PortalShield));
				public string PortalShieldIcon { get; } = Compose(nameof(PortalShieldIcon));
				public string PortalShieldIconError { get; } = Compose(nameof(PortalShieldIconError));
				public string PortalShieldIconOnTopbar { get; } = Compose(nameof(PortalShieldIconOnTopbar));
				public string PortalShieldIconWarning { get; } = Compose(nameof(PortalShieldIconWarning));
				public string PortalShieldModaldialog { get; } = Compose(nameof(PortalShieldModaldialog));
				public string PortalShieldModaldialogOnJumpbar { get; } = Compose(nameof(PortalShieldModaldialogOnJumpbar));
				public string PortalSvg { get; } = Compose(nameof(PortalSvg));
				public string PortalSvgSecondary { get; } = Compose(nameof(PortalSvgSecondary));
				public string PortalText { get; } = Compose(nameof(PortalText));
				public string PortalTextPrimary { get; } = Compose(nameof(PortalTextPrimary));
				public string PortalTip { get; } = Compose(nameof(PortalTip));
				public string PortalTipContent { get; } = Compose(nameof(PortalTipContent));
				public string PortalTitle { get; } = Compose(nameof(PortalTitle));
				public string Progress { get; } = Compose(nameof(Progress));
				public string ProgressAnimated { get; } = Compose(nameof(ProgressAnimated));
				public string Progressbox { get; } = Compose(nameof(Progressbox));
				public string ProgressboxProgressbar { get; } = Compose(nameof(ProgressboxProgressbar));
				public string ProgressboxText { get; } = Compose(nameof(ProgressboxText));
				public string ProgressDots { get; } = Compose(nameof(ProgressDots));
				public string Search { get; } = Compose(nameof(Search));
				public string Searchbox { get; } = Compose(nameof(Searchbox));
				public string SearchExpanded { get; } = Compose(nameof(SearchExpanded));
				public string SearchIcon { get; } = Compose(nameof(SearchIcon));
				public string Searching { get; } = Compose(nameof(Searching));
				public string SearchNoJourneys { get; } = Compose(nameof(SearchNoJourneys));
				public string Settingspane { get; } = Compose(nameof(Settingspane));
				public string SettingspaneApply { get; } = Compose(nameof(SettingspaneApply));
				public string SettingspaneBody { get; } = Compose(nameof(SettingspaneBody));
				public string SettingspaneBottom { get; } = Compose(nameof(SettingspaneBottom));
				public string SettingspaneCancel { get; } = Compose(nameof(SettingspaneCancel));
				public string SettingspaneCustomize { get; } = Compose(nameof(SettingspaneCustomize));
				public string SettingspaneCustomizeIcon { get; } = Compose(nameof(SettingspaneCustomizeIcon));
				public string SettingspaneCustomizeLabel { get; } = Compose(nameof(SettingspaneCustomizeLabel));
				public string SettingspaneHeader { get; } = Compose(nameof(SettingspaneHeader));
				public string SettingspaneItem { get; } = Compose(nameof(SettingspaneItem));
				public string SettingspaneLabel { get; } = Compose(nameof(SettingspaneLabel));
				public string SettingspaneResetlayoutLink { get; } = Compose(nameof(SettingspaneResetlayoutLink));
				public string SettingspaneSeparator { get; } = Compose(nameof(SettingspaneSeparator));
				public string SettingspaneSubfilter { get; } = Compose(nameof(SettingspaneSubfilter));
				public string SettingspaneTheme { get; } = Compose(nameof(SettingspaneTheme));
				public string SettingspaneThemeContainer { get; } = Compose(nameof(SettingspaneThemeContainer));
				public string SettingspaneThemeRadio { get; } = Compose(nameof(SettingspaneThemeRadio));
				public string SettingspaneThemeSelection { get; } = Compose(nameof(SettingspaneThemeSelection));
				public string ShouldUseSingleLine { get; } = Compose(nameof(ShouldUseSingleLine));
				public string ShowJourney { get; } = Compose(nameof(ShowJourney));
				public string ShowStartboard { get; } = Compose(nameof(ShowStartboard));
				public string Sidebar { get; } = Compose(nameof(Sidebar));
				public string SidebarAdjustment { get; } = Compose(nameof(SidebarAdjustment));
				public string SidebarBar { get; } = Compose(nameof(SidebarBar));
				public string SidebarBottom { get; } = Compose(nameof(SidebarBottom));
				public string SidebarBrowse { get; } = Compose(nameof(SidebarBrowse));
				public string SidebarBrowseFlyout { get; } = Compose(nameof(SidebarBrowseFlyout));
				public string SidebarBrowseIcon { get; } = Compose(nameof(SidebarBrowseIcon));
				public string SidebarBrowseLabel { get; } = Compose(nameof(SidebarBrowseLabel));
				public string SidebarButtonFlex { get; } = Compose(nameof(SidebarButtonFlex));
				public string SidebarCloud { get; } = Compose(nameof(SidebarCloud));
				public string SidebarCollapseButton { get; } = Compose(nameof(SidebarCollapseButton));
				public string SidebarContent { get; } = Compose(nameof(SidebarContent));
				public string SidebarCreate { get; } = Compose(nameof(SidebarCreate));
				public string SidebarCreateIcon { get; } = Compose(nameof(SidebarCreateIcon));
				public string SidebarCreateLabel { get; } = Compose(nameof(SidebarCreateLabel));
				public string SidebarDefaultviewenabled { get; } = Compose(nameof(SidebarDefaultviewenabled));
				public string SidebarDraggable { get; } = Compose(nameof(SidebarDraggable));
				public string SidebarDropdown { get; } = Compose(nameof(SidebarDropdown));
				public string SidebarDropdownButton { get; } = Compose(nameof(SidebarDropdownButton));
				public string SidebarDropdownButtonContainer { get; } = Compose(nameof(SidebarDropdownButtonContainer));
				public string SidebarDropdownButtonIcon { get; } = Compose(nameof(SidebarDropdownButtonIcon));
				public string SidebarDropdownButtonText { get; } = Compose(nameof(SidebarDropdownButtonText));
				public string SidebarDropdownContainer { get; } = Compose(nameof(SidebarDropdownContainer));
				public string SidebarDropdownItem { get; } = Compose(nameof(SidebarDropdownItem));
				public string SidebarDropdownItemTitle { get; } = Compose(nameof(SidebarDropdownItemTitle));
				public string SidebarDropdownTitle { get; } = Compose(nameof(SidebarDropdownTitle));
				public string SidebarDroppable { get; } = Compose(nameof(SidebarDroppable));
				public string SidebarExternal { get; } = Compose(nameof(SidebarExternal));
				public string SidebarFavorites { get; } = Compose(nameof(SidebarFavorites));
				public string SidebarFeedbackLink { get; } = Compose(nameof(SidebarFeedbackLink));
				public string SidebarFeedbackLinkDisabled { get; } = Compose(nameof(SidebarFeedbackLinkDisabled));
				public string SidebarFilterCategories { get; } = Compose(nameof(SidebarFilterCategories));
				public string SidebarFilterInput { get; } = Compose(nameof(SidebarFilterInput));
				public string SidebarFlyout { get; } = Compose(nameof(SidebarFlyout));
				public string SidebarFlyoutClose { get; } = Compose(nameof(SidebarFlyoutClose));
				public string SidebarFlyoutHeader { get; } = Compose(nameof(SidebarFlyoutHeader));
				public string SidebarFlyoutIsHidden { get; } = Compose(nameof(SidebarFlyoutIsHidden));
				public string SidebarHandle { get; } = Compose(nameof(SidebarHandle));
				public string SidebarHide { get; } = Compose(nameof(SidebarHide));
				public string SidebarHintText { get; } = Compose(nameof(SidebarHintText));
				public string SidebarHome { get; } = Compose(nameof(SidebarHome));
				public string SidebarIcon { get; } = Compose(nameof(SidebarIcon));
				public string SidebarIsCollapsed { get; } = Compose(nameof(SidebarIsCollapsed));
				public string SidebarItem { get; } = Compose(nameof(SidebarItem));
				public string SidebarItemCategory { get; } = Compose(nameof(SidebarItemCategory));
				public string SidebarItemContent { get; } = Compose(nameof(SidebarItemContent));
				public string SidebarItemIcon { get; } = Compose(nameof(SidebarItemIcon));
				public string SidebarItemLink { get; } = Compose(nameof(SidebarItemLink));
				public string SidebarLabel { get; } = Compose(nameof(SidebarLabel));
				public string SidebarMatches { get; } = Compose(nameof(SidebarMatches));
				public string SidebarMatchesPrefix { get; } = Compose(nameof(SidebarMatchesPrefix));
				public string SidebarMiddle { get; } = Compose(nameof(SidebarMiddle));
				public string SidebarPossibleFavorites { get; } = Compose(nameof(SidebarPossibleFavorites));
				public string SidebarShowIfCollapsed { get; } = Compose(nameof(SidebarShowIfCollapsed));
				public string SidebarShowIfExpanded { get; } = Compose(nameof(SidebarShowIfExpanded));
				public string SidebarStar { get; } = Compose(nameof(SidebarStar));
				public string SidebarTop { get; } = Compose(nameof(SidebarTop));
				public string Splashscreen { get; } = Compose(nameof(Splashscreen));
				public string SplashscreenLoaderContainer { get; } = Compose(nameof(SplashscreenLoaderContainer));
				public string SplashscreenLogo { get; } = Compose(nameof(SplashscreenLogo));
				public string Stacklayout { get; } = Compose(nameof(Stacklayout));
				public string StacklayoutChild { get; } = Compose(nameof(StacklayoutChild));
				public string StacklayoutHorizontal { get; } = Compose(nameof(StacklayoutHorizontal));
				public string StacklayoutVertical { get; } = Compose(nameof(StacklayoutVertical));
				public string Startboard { get; } = Compose(nameof(Startboard));
				public string StartboardActions { get; } = Compose(nameof(StartboardActions));
				public string StartboardButton { get; } = Compose(nameof(StartboardButton));
				public string StartboardButtonBrowse { get; } = Compose(nameof(StartboardButtonBrowse));
				public string StartboardButtonClone { get; } = Compose(nameof(StartboardButtonClone));
				public string StartboardButtonContainer { get; } = Compose(nameof(StartboardButtonContainer));
				public string StartboardButtonDelete { get; } = Compose(nameof(StartboardButtonDelete));
				public string StartboardButtonEdit { get; } = Compose(nameof(StartboardButtonEdit));
				public string StartboardButtonFullscreen { get; } = Compose(nameof(StartboardButtonFullscreen));
				public string StartboardButtonIcon { get; } = Compose(nameof(StartboardButtonIcon));
				public string StartboardButtonMigrate { get; } = Compose(nameof(StartboardButtonMigrate));
				public string StartboardButtonNew { get; } = Compose(nameof(StartboardButtonNew));
				public string StartboardButtonShare { get; } = Compose(nameof(StartboardButtonShare));
				public string StartboardButtonText { get; } = Compose(nameof(StartboardButtonText));
				public string StartboardDropdown { get; } = Compose(nameof(StartboardDropdown));
				public string StartboardDropdownBrowseall { get; } = Compose(nameof(StartboardDropdownBrowseall));
				public string StartboardDropdownItem { get; } = Compose(nameof(StartboardDropdownItem));
				public string StartboardDropdownSubscriptions { get; } = Compose(nameof(StartboardDropdownSubscriptions));
				public string StartboardHeader { get; } = Compose(nameof(StartboardHeader));
				public string StartboardHeaderMigration { get; } = Compose(nameof(StartboardHeaderMigration));
				public string StartboardHeaderNormal { get; } = Compose(nameof(StartboardHeaderNormal));
				public string StartboardItemContainer { get; } = Compose(nameof(StartboardItemContainer));
				public string StartboardItemIcon { get; } = Compose(nameof(StartboardItemIcon));
				public string StartboardItemTitle { get; } = Compose(nameof(StartboardItemTitle));
				public string StartboardLayout { get; } = Compose(nameof(StartboardLayout));
				public string StartboardLoadanimation { get; } = Compose(nameof(StartboardLoadanimation));
				public string StartboardLoading { get; } = Compose(nameof(StartboardLoading));
				public string StartboardMessageBody { get; } = Compose(nameof(StartboardMessageBody));
				public string StartboardMessageContainer { get; } = Compose(nameof(StartboardMessageContainer));
				public string StartboardMessageTitle { get; } = Compose(nameof(StartboardMessageTitle));
				public string StartboardMigration { get; } = Compose(nameof(StartboardMigration));
				public string StartboardNotfound { get; } = Compose(nameof(StartboardNotfound));
				public string StartboardTarget { get; } = Compose(nameof(StartboardTarget));
				public string StartboardTitle { get; } = Compose(nameof(StartboardTitle));
				public string StartboardTitleEdit { get; } = Compose(nameof(StartboardTitleEdit));
				public string StartboardTitleNext { get; } = Compose(nameof(StartboardTitleNext));
				public string TextDirty { get; } = Compose(nameof(TextDirty));
				public string TextError { get; } = Compose(nameof(TextError));
				public string TextInfo { get; } = Compose(nameof(TextInfo));
				public string TextLink { get; } = Compose(nameof(TextLink));
				public string TextSuccess { get; } = Compose(nameof(TextSuccess));
				public string TextWarning { get; } = Compose(nameof(TextWarning));
				public string TextWhite { get; } = Compose(nameof(TextWhite));
				public string ThemeAzure { get; } = Compose(nameof(ThemeAzure));
				public string ThemeBlue { get; } = Compose(nameof(ThemeBlue));
				public string ThemeContextStart { get; } = Compose(nameof(ThemeContextStart));
				public string ThemeDark { get; } = Compose(nameof(ThemeDark));
				public string ThemeLight { get; } = Compose(nameof(ThemeLight));
				public string Tile { get; } = Compose(nameof(Tile));
				public string TileActionbar { get; } = Compose(nameof(TileActionbar));
				public string TileActionbarAction { get; } = Compose(nameof(TileActionbarAction));
				public string TileActionbarActionlist { get; } = Compose(nameof(TileActionbarActionlist));
				public string TileActionbarActionPressed { get; } = Compose(nameof(TileActionbarActionPressed));
				public string TileActionbarCommandUnpinfromstartboard { get; } = Compose(nameof(TileActionbarCommandUnpinfromstartboard));
				public string TileActionbarcontainer { get; } = Compose(nameof(TileActionbarcontainer));
				public string TileActions { get; } = Compose(nameof(TileActions));
				public string TileActionsContextmenu { get; } = Compose(nameof(TileActionsContextmenu));
				public string TileContainer { get; } = Compose(nameof(TileContainer));
				public string TileContent { get; } = Compose(nameof(TileContent));
				public string TileOverlay { get; } = Compose(nameof(TileOverlay));
				public string TileProgress { get; } = Compose(nameof(TileProgress));
				public string TileProgressTransparent { get; } = Compose(nameof(TileProgressTransparent));
				public string TileSelected { get; } = Compose(nameof(TileSelected));
				public string TileSelectedfromhover { get; } = Compose(nameof(TileSelectedfromhover));
				public string TilesizeFittocontainer { get; } = Compose(nameof(TilesizeFittocontainer));
				public string TilesizeFullwidthfitheight { get; } = Compose(nameof(TilesizeFullwidthfitheight));
				public string TilesizeHero { get; } = Compose(nameof(TilesizeHero));
				public string TilesizeHerotall { get; } = Compose(nameof(TilesizeHerotall));
				public string TilesizeHerowide { get; } = Compose(nameof(TilesizeHerowide));
				public string TilesizeHerowidefitheight { get; } = Compose(nameof(TilesizeHerowidefitheight));
				public string TilesizeLarge { get; } = Compose(nameof(TilesizeLarge));
				public string TilesizeMini { get; } = Compose(nameof(TilesizeMini));
				public string TilesizeNormal { get; } = Compose(nameof(TilesizeNormal));
				public string TilesizeSmall { get; } = Compose(nameof(TilesizeSmall));
				public string TilesizeTall { get; } = Compose(nameof(TilesizeTall));
				public string TilesizeWide { get; } = Compose(nameof(TilesizeWide));
				public string Toast { get; } = Compose(nameof(Toast));
				public string ToastClose { get; } = Compose(nameof(ToastClose));
				public string ToastContent { get; } = Compose(nameof(ToastContent));
				public string ToastDescription { get; } = Compose(nameof(ToastDescription));
				public string ToastHeader { get; } = Compose(nameof(ToastHeader));
				public string ToastIcon { get; } = Compose(nameof(ToastIcon));
				public string ToastItem { get; } = Compose(nameof(ToastItem));
				public string ToastLink { get; } = Compose(nameof(ToastLink));
				public string ToastProgressbar { get; } = Compose(nameof(ToastProgressbar));
				public string ToastTime { get; } = Compose(nameof(ToastTime));
				public string ToastTitle { get; } = Compose(nameof(ToastTitle));
				public string Topbar { get; } = Compose(nameof(Topbar));
				public string TopbarAvatarmenu { get; } = Compose(nameof(TopbarAvatarmenu));
				public string TopbarButton { get; } = Compose(nameof(TopbarButton));
				public string TopbarConsole { get; } = Compose(nameof(TopbarConsole));
				public string TopbarContent { get; } = Compose(nameof(TopbarContent));
				public string TopbarDashboard { get; } = Compose(nameof(TopbarDashboard));
				public string TopbarDashboardChanged { get; } = Compose(nameof(TopbarDashboardChanged));
				public string TopbarDashboardDiscard { get; } = Compose(nameof(TopbarDashboardDiscard));
				public string TopbarDashboardDoneCustomize { get; } = Compose(nameof(TopbarDashboardDoneCustomize));
				public string TopbarDashboardMessage { get; } = Compose(nameof(TopbarDashboardMessage));
				public string TopbarDashboardSave { get; } = Compose(nameof(TopbarDashboardSave));
				public string TopbarDashboardView { get; } = Compose(nameof(TopbarDashboardView));
				public string TopbarDashboardVisible { get; } = Compose(nameof(TopbarDashboardVisible));
				public string TopbarDevmode { get; } = Compose(nameof(TopbarDevmode));
				public string TopbarExitCustomize { get; } = Compose(nameof(TopbarExitCustomize));
				public string TopbarExitCustomizeButton { get; } = Compose(nameof(TopbarExitCustomizeButton));
				public string TopbarExitCustomizeMessage { get; } = Compose(nameof(TopbarExitCustomizeMessage));
				public string TopbarExitdevmode { get; } = Compose(nameof(TopbarExitdevmode));
				public string TopbarFeedback { get; } = Compose(nameof(TopbarFeedback));
				public string TopbarHelpmenu { get; } = Compose(nameof(TopbarHelpmenu));
				public string TopbarHome { get; } = Compose(nameof(TopbarHome));
				public string TopbarInput { get; } = Compose(nameof(TopbarInput));
				public string TopbarInternal { get; } = Compose(nameof(TopbarInternal));
				public string TopbarJourneyIcon { get; } = Compose(nameof(TopbarJourneyIcon));
				public string TopbarNotifications { get; } = Compose(nameof(TopbarNotifications));
				public string TopbarReportbug { get; } = Compose(nameof(TopbarReportbug));
				public string TopbarSearch { get; } = Compose(nameof(TopbarSearch));
				public string TopbarSettings { get; } = Compose(nameof(TopbarSettings));
				public string TopbarToast { get; } = Compose(nameof(TopbarToast));
				public string Trim { get; } = Compose(nameof(Trim));
				public string TrimBorder { get; } = Compose(nameof(TrimBorder));
				public string TrimBtn { get; } = Compose(nameof(TrimBtn));
				public string TrimHover { get; } = Compose(nameof(TrimHover));
				public string TrimSelected { get; } = Compose(nameof(TrimSelected));
				public string TrimSvg { get; } = Compose(nameof(TrimSvg));
				public string TrimSvgSecondary { get; } = Compose(nameof(TrimSvgSecondary));
				public string TrimText { get; } = Compose(nameof(TrimText));
				public string TrimTextPrimary { get; } = Compose(nameof(TrimTextPrimary));
				public string TrimTitle { get; } = Compose(nameof(TrimTitle));*/

		public string Accent { get; } = Compose(nameof(Accent));
		public string Avatarmenu { get; } = Compose(nameof(Avatarmenu));
		public string AvatarmenuBilling { get; } = Compose(nameof(AvatarmenuBilling));
		public string AvatarmenuChangepassword { get; } = Compose(nameof(AvatarmenuChangepassword));
		public string AvatarmenuDropdown { get; } = Compose(nameof(AvatarmenuDropdown));
		public string AvatarmenuDropdownTitle { get; } = Compose(nameof(AvatarmenuDropdownTitle));
		public string AvatarmenuFeedback { get; } = Compose(nameof(AvatarmenuFeedback));
		public string AvatarmenuHeader { get; } = Compose(nameof(AvatarmenuHeader));
		public string AvatarmenuListSystem { get; } = Compose(nameof(AvatarmenuListSystem));
		public string AvatarmenuListTenant { get; } = Compose(nameof(AvatarmenuListTenant));
		public string AvatarmenuMyaccess { get; } = Compose(nameof(AvatarmenuMyaccess));
		public string AvatarmenuScrollviewer { get; } = Compose(nameof(AvatarmenuScrollviewer));
		public string AvatarmenuSignout { get; } = Compose(nameof(AvatarmenuSignout));
		public string AvatarmenuTenant { get; } = Compose(nameof(AvatarmenuTenant));
		public string AvatarmenuTenantContainer { get; } = Compose(nameof(AvatarmenuTenantContainer));
		public string AvatarmenuTenantImage { get; } = Compose(nameof(AvatarmenuTenantImage));
		public string AvatarmenuTenantName { get; } = Compose(nameof(AvatarmenuTenantName));
		public string AvatarmenuTenantUri { get; } = Compose(nameof(AvatarmenuTenantUri));
		public string AvatarmenuUsername { get; } = Compose(nameof(AvatarmenuUsername));
		public string BgDirty { get; } = Compose(nameof(BgDirty));
		public string BgError { get; } = Compose(nameof(BgError));
		public string BgInfo { get; } = Compose(nameof(BgInfo));
		public string BgNone { get; } = Compose(nameof(BgNone));
		public string BgOverlayDark { get; } = Compose(nameof(BgOverlayDark));
		public string BgPrimary { get; } = Compose(nameof(BgPrimary));
		public string BgSuccess { get; } = Compose(nameof(BgSuccess));
		public string BgUpsell { get; } = Compose(nameof(BgUpsell));
		public string BgWarning { get; } = Compose(nameof(BgWarning));
		public string BgWhite { get; } = Compose(nameof(BgWhite));
		public string Blade { get; } = Compose(nameof(Blade));
		public string BladeAction { get; } = Compose(nameof(BladeAction));
		public string BladeActions { get; } = Compose(nameof(BladeActions));
		public string BladeActivationstyle { get; } = Compose(nameof(BladeActivationstyle));
		public string BladeAppblade { get; } = Compose(nameof(BladeAppblade));
		public string BladeBorder { get; } = Compose(nameof(BladeBorder));
		public string BladeClose { get; } = Compose(nameof(BladeClose));
		public string BladeCommand { get; } = Compose(nameof(BladeCommand));
		public string Bladecontent { get; } = Compose(nameof(Bladecontent));
		public string BladeContent { get; } = Compose(nameof(BladeContent));
		public string BladeContentContainer { get; } = Compose(nameof(BladeContentContainer));
		public string BladeContentContainerDefault { get; } = Compose(nameof(BladeContentContainerDefault));
		public string BladeContentContainerDetails { get; } = Compose(nameof(BladeContentContainerDetails));
		public string BladecontentProgress { get; } = Compose(nameof(BladecontentProgress));
		public string BladecontentUnlocked { get; } = Compose(nameof(BladecontentUnlocked));
		public string BladeContentWrapper { get; } = Compose(nameof(BladeContentWrapper));
		public string BladeDialog { get; } = Compose(nameof(BladeDialog));
		public string BladeDialoghost { get; } = Compose(nameof(BladeDialoghost));
		public string BladeDisabled { get; } = Compose(nameof(BladeDisabled));
		public string BladeDisabledMessage { get; } = Compose(nameof(BladeDisabledMessage));
		public string BladeHasActivation { get; } = Compose(nameof(BladeHasActivation));
		public string BladeHeader { get; } = Compose(nameof(BladeHeader));
		public string BladeHeaderIcon { get; } = Compose(nameof(BladeHeaderIcon));
		public string BladeInitializing { get; } = Compose(nameof(BladeInitializing));
		public string BladeLoaded { get; } = Compose(nameof(BladeLoaded));
		public string BladeLoadingStatus { get; } = Compose(nameof(BladeLoadingStatus));
		public string BladeLocked { get; } = Compose(nameof(BladeLocked));
		public string BladeMaximize { get; } = Compose(nameof(BladeMaximize));
		public string BladeMaximized { get; } = Compose(nameof(BladeMaximized));
		public string BladePin { get; } = Compose(nameof(BladePin));
		public string BladePlaceholder { get; } = Compose(nameof(BladePlaceholder));
		public string BladeProgress { get; } = Compose(nameof(BladeProgress));
		public string BladeProgressTranslucent { get; } = Compose(nameof(BladeProgressTranslucent));
		public string BladeShieldTranslucent { get; } = Compose(nameof(BladeShieldTranslucent));
		public string BladesizeMenu { get; } = Compose(nameof(BladesizeMenu));
		public string BladesizeSmall { get; } = Compose(nameof(BladesizeSmall));
		public string BladeStacklayout { get; } = Compose(nameof(BladeStacklayout));
		public string BladeStatusArrow { get; } = Compose(nameof(BladeStatusArrow));
		public string BladeStatusbar { get; } = Compose(nameof(BladeStatusbar));
		public string BladeStatusbarText { get; } = Compose(nameof(BladeStatusbarText));
		public string BladeStatusbarWrapper { get; } = Compose(nameof(BladeStatusbarWrapper));
		public string BladeStatusbg { get; } = Compose(nameof(BladeStatusbg));
		public string BladeStatusContainer { get; } = Compose(nameof(BladeStatusContainer));
		public string BladeStatusIcon { get; } = Compose(nameof(BladeStatusIcon));
		public string BladeStatusText { get; } = Compose(nameof(BladeStatusText));
		public string BladeStatusTextContainer { get; } = Compose(nameof(BladeStatusTextContainer));
		public string BladestyleApp { get; } = Compose(nameof(BladestyleApp));
		public string BladestyleBasic { get; } = Compose(nameof(BladestyleBasic));
		public string BladestyleBasicwithcommands { get; } = Compose(nameof(BladestyleBasicwithcommands));
		public string BladestyleContext { get; } = Compose(nameof(BladestyleContext));
		public string BladestyleContextaction { get; } = Compose(nameof(BladestyleContextaction));
		public string BladestyleCreate { get; } = Compose(nameof(BladestyleCreate));
		public string BladestyleHelp { get; } = Compose(nameof(BladestyleHelp));
		public string BladestyleHub { get; } = Compose(nameof(BladestyleHub));
		public string BladestyleHubsubmenu { get; } = Compose(nameof(BladestyleHubsubmenu));
		public string BladeSummaryContainer { get; } = Compose(nameof(BladeSummaryContainer));
		public string BladeTitle { get; } = Compose(nameof(BladeTitle));
		public string BladeTitleContent { get; } = Compose(nameof(BladeTitleContent));
		public string BladeTitleDescription { get; } = Compose(nameof(BladeTitleDescription));
		public string BladeTitleHelpIcon { get; } = Compose(nameof(BladeTitleHelpIcon));
		public string BladeTitleHelpLink { get; } = Compose(nameof(BladeTitleHelpLink));
		public string BladeTitleImage { get; } = Compose(nameof(BladeTitleImage));
		public string BladeTitleSubtitle { get; } = Compose(nameof(BladeTitleSubtitle));
		public string BladeTitleTitle { get; } = Compose(nameof(BladeTitleTitle));
		public string BladeUnauthorized { get; } = Compose(nameof(BladeUnauthorized));
		public string BladeWithcolumns { get; } = Compose(nameof(BladeWithcolumns));
		public string BoxWrapper { get; } = Compose(nameof(BoxWrapper));
		public string BrDirty { get; } = Compose(nameof(BrDirty));
		public string Breadcrumb { get; } = Compose(nameof(Breadcrumb));
		public string BreadcrumbCrumb { get; } = Compose(nameof(BreadcrumbCrumb));
		public string BreadcrumbDivider { get; } = Compose(nameof(BreadcrumbDivider));
		public string BreadcrumbDropmenu { get; } = Compose(nameof(BreadcrumbDropmenu));
		public string BreadcrumbOverflow { get; } = Compose(nameof(BreadcrumbOverflow));
		public string BreadcrumbWrapper { get; } = Compose(nameof(BreadcrumbWrapper));
		public string BrError { get; } = Compose(nameof(BrError));
		public string BrInfo { get; } = Compose(nameof(BrInfo));
		public string BrPrimary { get; } = Compose(nameof(BrPrimary));
		public string BrSuccess { get; } = Compose(nameof(BrSuccess));
		public string BrWarning { get; } = Compose(nameof(BrWarning));
		public string Button { get; } = Compose(nameof(Button));
		public string ButtonDefault { get; } = Compose(nameof(ButtonDefault));
		public string ButtonDisabled { get; } = Compose(nameof(ButtonDisabled));
		public string CanUseMultiline { get; } = Compose(nameof(CanUseMultiline));
		public string Command { get; } = Compose(nameof(Command));
		public string CommandsContext { get; } = Compose(nameof(CommandsContext));
		public string Context { get; } = Compose(nameof(Context));
		public string ContextbladePlaceholder { get; } = Compose(nameof(ContextbladePlaceholder));
		public string Contextpane { get; } = Compose(nameof(Contextpane));
		public string ContextpaneButtonInner { get; } = Compose(nameof(ContextpaneButtonInner));
		public string ContextpaneClose { get; } = Compose(nameof(ContextpaneClose));
		public string ContextpaneContent { get; } = Compose(nameof(ContextpaneContent));
		public string ContextpaneExpand { get; } = Compose(nameof(ContextpaneExpand));
		public string ContextpaneLoading { get; } = Compose(nameof(ContextpaneLoading));
		public string ContextpaneVisible { get; } = Compose(nameof(ContextpaneVisible));
		public string Copyfield { get; } = Compose(nameof(Copyfield));
		public string CopyfieldContainer { get; } = Compose(nameof(CopyfieldContainer));
		public string CopyfieldCopied { get; } = Compose(nameof(CopyfieldCopied));
		public string CopyfieldWrapper { get; } = Compose(nameof(CopyfieldWrapper));
		public string Cross { get; } = Compose(nameof(Cross));
		public string DesktopNormal { get; } = Compose(nameof(DesktopNormal));
		public string DesktopOrganize { get; } = Compose(nameof(DesktopOrganize));
		public string Dialogballoon { get; } = Compose(nameof(Dialogballoon));
		public string DisplayNone { get; } = Compose(nameof(DisplayNone));
		public string DragDisable { get; } = Compose(nameof(DragDisable));
		public string DragSurface { get; } = Compose(nameof(DragSurface));
		public string Dropmenu { get; } = Compose(nameof(Dropmenu));
		public string DropmenuButton { get; } = Compose(nameof(DropmenuButton));
		public string DropmenuContent { get; } = Compose(nameof(DropmenuContent));
		public string DropmenuExtend { get; } = Compose(nameof(DropmenuExtend));
		public string DropmenuHidden { get; } = Compose(nameof(DropmenuHidden));
		public string DropmenuImage { get; } = Compose(nameof(DropmenuImage));
		public string DropmenuInvisible { get; } = Compose(nameof(DropmenuInvisible));
		public string DropmenuLeft { get; } = Compose(nameof(DropmenuLeft));
		public string DropmenuLineSeparator { get; } = Compose(nameof(DropmenuLineSeparator));
		public string DropmenuListContent { get; } = Compose(nameof(DropmenuListContent));
		public string DropmenuListSystem { get; } = Compose(nameof(DropmenuListSystem));
		public string DropmenuRight { get; } = Compose(nameof(DropmenuRight));
		public string Ellipsis { get; } = Compose(nameof(Ellipsis));
		public string Errorpart { get; } = Compose(nameof(Errorpart));
		public string ErrorpartClickable { get; } = Compose(nameof(ErrorpartClickable));
		public string ExtensionFrame { get; } = Compose(nameof(ExtensionFrame));
		public string FillDirty { get; } = Compose(nameof(FillDirty));
		public string FillError { get; } = Compose(nameof(FillError));
		public string FillInfo { get; } = Compose(nameof(FillInfo));
		public string FillNone { get; } = Compose(nameof(FillNone));
		public string FillSuccess { get; } = Compose(nameof(FillSuccess));
		public string FillUpsell { get; } = Compose(nameof(FillUpsell));
		public string FillWarning { get; } = Compose(nameof(FillWarning));
		public string FillWhite { get; } = Compose(nameof(FillWhite));
		public string Flowlayout { get; } = Compose(nameof(Flowlayout));
		public string FlowlayoutChildcontainer { get; } = Compose(nameof(FlowlayoutChildcontainer));
		public string FlowlayoutDropPlaceholder { get; } = Compose(nameof(FlowlayoutDropPlaceholder));
		public string FlowlayoutElement { get; } = Compose(nameof(FlowlayoutElement));
		public string FlowlayoutLivepreview { get; } = Compose(nameof(FlowlayoutLivepreview));
		public string FlowlayoutResizehandle { get; } = Compose(nameof(FlowlayoutResizehandle));
		public string FlowlayoutResolutionguide { get; } = Compose(nameof(FlowlayoutResolutionguide));
		public string Formdialog { get; } = Compose(nameof(Formdialog));
		public string FormdialogButtons { get; } = Compose(nameof(FormdialogButtons));
		public string FormdialogDescription { get; } = Compose(nameof(FormdialogDescription));
		public string FormdialogForm { get; } = Compose(nameof(FormdialogForm));
		public string FormdialogHeader { get; } = Compose(nameof(FormdialogHeader));
		public string FullHeight { get; } = Compose(nameof(FullHeight));
		public string FullWidth { get; } = Compose(nameof(FullWidth));
		public string GraphFill { get; } = Compose(nameof(GraphFill));
		public string Header { get; } = Compose(nameof(Header));
		public string HiddenImportant { get; } = Compose(nameof(HiddenImportant));
		public string HideAccessibleLabel { get; } = Compose(nameof(HideAccessibleLabel));
		public string HideInCustomize { get; } = Compose(nameof(HideInCustomize));
		public string HideInNormal { get; } = Compose(nameof(HideInNormal));
		public string Highlight { get; } = Compose(nameof(Highlight));
		public string Hub { get; } = Compose(nameof(Hub));
		public string Icon { get; } = Compose(nameof(Icon));
		public string Indicator { get; } = Compose(nameof(Indicator));
		public string IndicatorAnimated { get; } = Compose(nameof(IndicatorAnimated));
		public string Input { get; } = Compose(nameof(Input));
		public string IsFavorite { get; } = Compose(nameof(IsFavorite));
		public string Journey { get; } = Compose(nameof(Journey));
		public string JourneyBreadcrumbOverflow { get; } = Compose(nameof(JourneyBreadcrumbOverflow));
		public string JourneyLayout { get; } = Compose(nameof(JourneyLayout));
		public string Journeys { get; } = Compose(nameof(Journeys));
		public string JourneysmenuContent { get; } = Compose(nameof(JourneysmenuContent));
		public string JourneysmenuJourney { get; } = Compose(nameof(JourneysmenuJourney));
		public string JourneysmenuJourneyContent { get; } = Compose(nameof(JourneysmenuJourneyContent));
		public string JourneysmenuJourneyNodata { get; } = Compose(nameof(JourneysmenuJourneyNodata));
		public string JourneysmenuJourneyNodataContent { get; } = Compose(nameof(JourneysmenuJourneyNodataContent));
		public string JourneysmenuJourneyWrapper { get; } = Compose(nameof(JourneysmenuJourneyWrapper));
		public string JourneysmenuList { get; } = Compose(nameof(JourneysmenuList));
		public string JourneyTarget { get; } = Compose(nameof(JourneyTarget));
		public string JourneyWithspacer { get; } = Compose(nameof(JourneyWithspacer));
		public string Keyboardshortcuts { get; } = Compose(nameof(Keyboardshortcuts));
		public string KeyboardshortcutsCategory { get; } = Compose(nameof(KeyboardshortcutsCategory));
		public string KeyboardshortcutsKey { get; } = Compose(nameof(KeyboardshortcutsKey));
		public string KeyboardshortcutsShortcut { get; } = Compose(nameof(KeyboardshortcutsShortcut));
		public string Lens { get; } = Compose(nameof(Lens));
		public string LensButtonCollapse { get; } = Compose(nameof(LensButtonCollapse));
		public string LensCollapsed { get; } = Compose(nameof(LensCollapsed));
		public string LensFit { get; } = Compose(nameof(LensFit));
		public string LensLayout { get; } = Compose(nameof(LensLayout));
		public string LensLayoutFlow { get; } = Compose(nameof(LensLayoutFlow));
		public string LensTitle { get; } = Compose(nameof(LensTitle));
		public string LensTitleContainer { get; } = Compose(nameof(LensTitleContainer));
		public string LensTitleHr { get; } = Compose(nameof(LensTitleHr));
		public string Listpopup { get; } = Compose(nameof(Listpopup));
		public string ListpopupItem { get; } = Compose(nameof(ListpopupItem));
		public string ListpopupList { get; } = Compose(nameof(ListpopupList));
		public string Loading { get; } = Compose(nameof(Loading));
		public string ManifestFrame { get; } = Compose(nameof(ManifestFrame));
		public string Menu { get; } = Compose(nameof(Menu));
		public string MenuAccount { get; } = Compose(nameof(MenuAccount));
		public string MenuBrowse { get; } = Compose(nameof(MenuBrowse));
		public string MenuSettings { get; } = Compose(nameof(MenuSettings));
		public string Messagebox { get; } = Compose(nameof(Messagebox));
		public string MessageboxButtons { get; } = Compose(nameof(MessageboxButtons));
		public string MessageboxConfirmation { get; } = Compose(nameof(MessageboxConfirmation));
		public string MessageboxHtml { get; } = Compose(nameof(MessageboxHtml));
		public string MessageboxText { get; } = Compose(nameof(MessageboxText));
		public string MessageboxTitle { get; } = Compose(nameof(MessageboxTitle));
		public string Modal { get; } = Compose(nameof(Modal));
		public string ModalBottomTriangle { get; } = Compose(nameof(ModalBottomTriangle));
		public string ModalCanTransition { get; } = Compose(nameof(ModalCanTransition));
		public string ModalLeftTriangle { get; } = Compose(nameof(ModalLeftTriangle));
		public string ModalOverlay { get; } = Compose(nameof(ModalOverlay));
		public string ModalOverlayDismiss { get; } = Compose(nameof(ModalOverlayDismiss));
		public string ModalProgress { get; } = Compose(nameof(ModalProgress));
		public string ModalProgressCircle { get; } = Compose(nameof(ModalProgressCircle));
		public string ModalProgressCurrent { get; } = Compose(nameof(ModalProgressCurrent));
		public string ModalRightTriangle { get; } = Compose(nameof(ModalRightTriangle));
		public string Modaltooltip { get; } = Compose(nameof(Modaltooltip));
		public string ModaltooltipButton { get; } = Compose(nameof(ModaltooltipButton));
		public string ModaltooltipButtonContainer { get; } = Compose(nameof(ModaltooltipButtonContainer));
		public string ModaltooltipClose { get; } = Compose(nameof(ModaltooltipClose));
		public string ModaltooltipDescription { get; } = Compose(nameof(ModaltooltipDescription));
		public string ModaltooltipNext { get; } = Compose(nameof(ModaltooltipNext));
		public string ModaltooltipNextIcon { get; } = Compose(nameof(ModaltooltipNextIcon));
		public string ModaltooltipPrev { get; } = Compose(nameof(ModaltooltipPrev));
		public string ModaltooltipPrevIcon { get; } = Compose(nameof(ModaltooltipPrevIcon));
		public string ModaltooltipProgress { get; } = Compose(nameof(ModaltooltipProgress));
		public string ModaltooltipTitle { get; } = Compose(nameof(ModaltooltipTitle));
		public string ModalTopTriangle { get; } = Compose(nameof(ModalTopTriangle));
		public string ModalTriangle { get; } = Compose(nameof(ModalTriangle));
		public string Modalwelcomeprompt { get; } = Compose(nameof(Modalwelcomeprompt));
		public string ModalwelcomepromptBody { get; } = Compose(nameof(ModalwelcomepromptBody));
		public string ModalwelcomepromptButtonContainer { get; } = Compose(nameof(ModalwelcomepromptButtonContainer));
		public string ModalwelcomepromptMaybelater { get; } = Compose(nameof(ModalwelcomepromptMaybelater));
		public string ModalwelcomepromptStarttour { get; } = Compose(nameof(ModalwelcomepromptStarttour));
		public string ModalwelcomepromptTitle { get; } = Compose(nameof(ModalwelcomepromptTitle));
		public string ModeDark { get; } = Compose(nameof(ModeDark));
		public string ModeLight { get; } = Compose(nameof(ModeLight));
		public string ModeLocked { get; } = Compose(nameof(ModeLocked));
		public string NotificationmenuButtonUnreadcount { get; } = Compose(nameof(NotificationmenuButtonUnreadcount));
		public string NotificationmenuButtonUnreadcountCircle { get; } = Compose(nameof(NotificationmenuButtonUnreadcountCircle));
		public string NotificationmenuButtonUnreadcountOval { get; } = Compose(nameof(NotificationmenuButtonUnreadcountOval));
		public string NotificationmenuDropdown { get; } = Compose(nameof(NotificationmenuDropdown));
		public string NotificationmenuIcon { get; } = Compose(nameof(NotificationmenuIcon));
		public string NotificationmenuIndeterminateProgress { get; } = Compose(nameof(NotificationmenuIndeterminateProgress));
		public string NotificationmenuList { get; } = Compose(nameof(NotificationmenuList));
		public string NotificationmenuNotification { get; } = Compose(nameof(NotificationmenuNotification));
		public string NotificationmenuNotificationclick { get; } = Compose(nameof(NotificationmenuNotificationclick));
		public string NotificationmenuNotificationDescription { get; } = Compose(nameof(NotificationmenuNotificationDescription));
		public string NotificationmenuNotificationDetails { get; } = Compose(nameof(NotificationmenuNotificationDetails));
		public string NotificationmenuNotificationDismiss { get; } = Compose(nameof(NotificationmenuNotificationDismiss));
		public string NotificationmenuNotificationExpand { get; } = Compose(nameof(NotificationmenuNotificationExpand));
		public string NotificationmenuNotificationExpanded { get; } = Compose(nameof(NotificationmenuNotificationExpanded));
		public string NotificationmenuNotificationIcon { get; } = Compose(nameof(NotificationmenuNotificationIcon));
		public string NotificationmenuNotificationNodata { get; } = Compose(nameof(NotificationmenuNotificationNodata));
		public string NotificationmenuNotificationNodataContent { get; } = Compose(nameof(NotificationmenuNotificationNodataContent));
		public string NotificationmenuNotificationProgressbar { get; } = Compose(nameof(NotificationmenuNotificationProgressbar));
		public string NotificationmenuNotificationTitle { get; } = Compose(nameof(NotificationmenuNotificationTitle));
		public string NotificationmenuNotificationTitleIcon { get; } = Compose(nameof(NotificationmenuNotificationTitleIcon));
		public string NotificationmenuNotificationTitleProgresstext { get; } = Compose(nameof(NotificationmenuNotificationTitleProgresstext));
		public string NotificationmenuNotificationTitleSubtitle { get; } = Compose(nameof(NotificationmenuNotificationTitleSubtitle));
		public string NotificationmenuNotificationTitleText { get; } = Compose(nameof(NotificationmenuNotificationTitleText));
		public string Notificationspane { get; } = Compose(nameof(Notificationspane));
		public string NotificationspaneButtonUnreadcount { get; } = Compose(nameof(NotificationspaneButtonUnreadcount));
		public string NotificationspaneButtonUnreadcountCircle { get; } = Compose(nameof(NotificationspaneButtonUnreadcountCircle));
		public string NotificationspaneButtonUnreadcountOval { get; } = Compose(nameof(NotificationspaneButtonUnreadcountOval));
		public string NotificationspaneDismiss { get; } = Compose(nameof(NotificationspaneDismiss));
		public string NotificationspaneDismisscontainer { get; } = Compose(nameof(NotificationspaneDismisscontainer));
		public string NotificationspaneDismissitem { get; } = Compose(nameof(NotificationspaneDismissitem));
		public string NotificationspaneDismissitemdisabled { get; } = Compose(nameof(NotificationspaneDismissitemdisabled));
		public string NotificationspaneDismisslist { get; } = Compose(nameof(NotificationspaneDismisslist));
		public string NotificationspaneHeader { get; } = Compose(nameof(NotificationspaneHeader));
		public string NotificationspaneLabel { get; } = Compose(nameof(NotificationspaneLabel));
		public string NotificationspaneList { get; } = Compose(nameof(NotificationspaneList));
		public string NotificationspaneProgressbar { get; } = Compose(nameof(NotificationspaneProgressbar));
		public string NotificationspaneTitle { get; } = Compose(nameof(NotificationspaneTitle));
		public string NotificationspaneTop { get; } = Compose(nameof(NotificationspaneTop));
		public string Nps { get; } = Compose(nameof(Nps));
		public string NpsButtonHolder { get; } = Compose(nameof(NpsButtonHolder));
		public string NpsCheckbox { get; } = Compose(nameof(NpsCheckbox));
		public string NpsComments { get; } = Compose(nameof(NpsComments));
		public string NpsCommentstitle { get; } = Compose(nameof(NpsCommentstitle));
		public string NpsHelp { get; } = Compose(nameof(NpsHelp));
		public string NpsLinkSurvey { get; } = Compose(nameof(NpsLinkSurvey));
		public string NpsScore { get; } = Compose(nameof(NpsScore));
		public string NpsScoreSelected { get; } = Compose(nameof(NpsScoreSelected));
		public string NpsSubmit { get; } = Compose(nameof(NpsSubmit));
		public string NpsSurvey { get; } = Compose(nameof(NpsSurvey));
		public string NpsTitle { get; } = Compose(nameof(NpsTitle));
		public string Overlay { get; } = Compose(nameof(Overlay));
		public string PanningCursor { get; } = Compose(nameof(PanningCursor));
		public string Panorama { get; } = Compose(nameof(Panorama));
		public string PanoramaScrollbounceOnleft { get; } = Compose(nameof(PanoramaScrollbounceOnleft));
		public string PanoramaScrollbounceOnright { get; } = Compose(nameof(PanoramaScrollbounceOnright));
		public string PanoramaScrollbounceReset { get; } = Compose(nameof(PanoramaScrollbounceReset));
		public string Part { get; } = Compose(nameof(Part));
		public string PartAssetpart { get; } = Compose(nameof(PartAssetpart));
		public string PartAssetpartAsset { get; } = Compose(nameof(PartAssetpartAsset));
		public string PartAssetpartBadge { get; } = Compose(nameof(PartAssetpartBadge));
		public string PartAssetpartIcon { get; } = Compose(nameof(PartAssetpartIcon));
		public string PartAssetpartInner { get; } = Compose(nameof(PartAssetpartInner));
		public string PartAssetpartOuter { get; } = Compose(nameof(PartAssetpartOuter));
		public string PartAssetpartStatus { get; } = Compose(nameof(PartAssetpartStatus));
		public string PartAssetpartType { get; } = Compose(nameof(PartAssetpartType));
		public string PartBlockuiShield { get; } = Compose(nameof(PartBlockuiShield));
		public string PartButtonpart { get; } = Compose(nameof(PartButtonpart));
		public string PartButtonpartAdornment { get; } = Compose(nameof(PartButtonpartAdornment));
		public string PartButtonpartAssetname { get; } = Compose(nameof(PartButtonpartAssetname));
		public string PartButtonpartDesc { get; } = Compose(nameof(PartButtonpartDesc));
		public string PartButtonpartExternallink { get; } = Compose(nameof(PartButtonpartExternallink));
		public string PartButtonpartIconcontainer { get; } = Compose(nameof(PartButtonpartIconcontainer));
		public string PartButtonpartInner { get; } = Compose(nameof(PartButtonpartInner));
		public string PartButtonpartInnerPad { get; } = Compose(nameof(PartButtonpartInnerPad));
		public string PartButtonpartTextcontainer { get; } = Compose(nameof(PartButtonpartTextcontainer));
		public string PartButtonpartTitle { get; } = Compose(nameof(PartButtonpartTitle));
		public string PartClickable { get; } = Compose(nameof(PartClickable));
		public string PartCollectionpart { get; } = Compose(nameof(PartCollectionpart));
		public string PartCollectionpartMoreData { get; } = Compose(nameof(PartCollectionpartMoreData));
		public string PartCollectionpartNoRollupCount { get; } = Compose(nameof(PartCollectionpartNoRollupCount));
		public string PartCollectionpartPartTitle { get; } = Compose(nameof(PartCollectionpartPartTitle));
		public string PartCollectionpartRollupContainer { get; } = Compose(nameof(PartCollectionpartRollupContainer));
		public string PartCollectionpartRollupCount { get; } = Compose(nameof(PartCollectionpartRollupCount));
		public string PartCollectionpartRollupForceshow { get; } = Compose(nameof(PartCollectionpartRollupForceshow));
		public string PartCollectionpartRollupIcon { get; } = Compose(nameof(PartCollectionpartRollupIcon));
		public string PartCollectionpartRollupLabel { get; } = Compose(nameof(PartCollectionpartRollupLabel));
		public string PartColorWhite { get; } = Compose(nameof(PartColorWhite));
		public string PartContent { get; } = Compose(nameof(PartContent));
		public string PartError { get; } = Compose(nameof(PartError));
		public string PartErrorContent { get; } = Compose(nameof(PartErrorContent));
		public string PartErrorDevmode { get; } = Compose(nameof(PartErrorDevmode));
		public string PartErrorIcon { get; } = Compose(nameof(PartErrorIcon));
		public string PartErrorReason { get; } = Compose(nameof(PartErrorReason));
		public string PartErrorSubtitle { get; } = Compose(nameof(PartErrorSubtitle));
		public string PartErrorText { get; } = Compose(nameof(PartErrorText));
		public string PartErrorTitle { get; } = Compose(nameof(PartErrorTitle));
		public string PartForTemplateBlade { get; } = Compose(nameof(PartForTemplateBlade));
		public string PartgalleryContainer { get; } = Compose(nameof(PartgalleryContainer));
		public string PartgalleryLoadingStatus { get; } = Compose(nameof(PartgalleryLoadingStatus));
		public string PartgalleryPartscontainer { get; } = Compose(nameof(PartgalleryPartscontainer));
		public string PartgalleryTitle { get; } = Compose(nameof(PartgalleryTitle));
		public string PartgalleryTopcontainer { get; } = Compose(nameof(PartgalleryTopcontainer));
		public string PartIsV { get; } = Compose(nameof(PartIsV));
		public string PartNoaccessmessage { get; } = Compose(nameof(PartNoaccessmessage));
		public string PartNoaccessmessageText { get; } = Compose(nameof(PartNoaccessmessageText));
		public string PartNoaccessmessageTextsmall { get; } = Compose(nameof(PartNoaccessmessageTextsmall));
		public string PartNoaccessmessageWithtitle { get; } = Compose(nameof(PartNoaccessmessageWithtitle));
		public string PartNodata { get; } = Compose(nameof(PartNodata));
		public string PartNodatamessage { get; } = Compose(nameof(PartNodatamessage));
		public string PartNodatamessageText { get; } = Compose(nameof(PartNodatamessageText));
		public string PartNotfound { get; } = Compose(nameof(PartNotfound));
		public string PartNotfoundmessage { get; } = Compose(nameof(PartNotfoundmessage));
		public string PartNotfoundmessageText { get; } = Compose(nameof(PartNotfoundmessageText));
		public string PartPartTitleVisible { get; } = Compose(nameof(PartPartTitleVisible));
		public string PartProperties { get; } = Compose(nameof(PartProperties));
		public string PartPropertiesCopyfield { get; } = Compose(nameof(PartPropertiesCopyfield));
		public string PartPropertiesImage { get; } = Compose(nameof(PartPropertiesImage));
		public string PartPropertiesPropertyWrapped { get; } = Compose(nameof(PartPropertiesPropertyWrapped));
		public string PartPropertiesText { get; } = Compose(nameof(PartPropertiesText));
		public string PartResourcesummary { get; } = Compose(nameof(PartResourcesummary));
		public string PartResourcesummaryBottom { get; } = Compose(nameof(PartResourcesummaryBottom));
		public string PartResourcesummaryShortcuts { get; } = Compose(nameof(PartResourcesummaryShortcuts));
		public string PartSelected { get; } = Compose(nameof(PartSelected));
		public string PartSelectedCommand { get; } = Compose(nameof(PartSelectedCommand));
		public string PartSuccess { get; } = Compose(nameof(PartSuccess));
		public string PartTitle { get; } = Compose(nameof(PartTitle));
		public string Popup { get; } = Compose(nameof(Popup));
		public string PopupButton { get; } = Compose(nameof(PopupButton));
		public string Portal { get; } = Compose(nameof(Portal));
		public string PortalBackground { get; } = Compose(nameof(PortalBackground));
		public string PortalBackgroundPrimary { get; } = Compose(nameof(PortalBackgroundPrimary));
		public string PortalBackgroundSecondary { get; } = Compose(nameof(PortalBackgroundSecondary));
		public string PortalBgTxtBr { get; } = Compose(nameof(PortalBgTxtBr));
		public string PortalBorder { get; } = Compose(nameof(PortalBorder));
		public string PortalButtonPrimary { get; } = Compose(nameof(PortalButtonPrimary));
		public string PortalConsole { get; } = Compose(nameof(PortalConsole));
		public string PortalContent { get; } = Compose(nameof(PortalContent));
		public string PortalContextpaneLeft { get; } = Compose(nameof(PortalContextpaneLeft));
		public string PortalContextpaneRight { get; } = Compose(nameof(PortalContextpaneRight));
		public string PortalControlloadfailed { get; } = Compose(nameof(PortalControlloadfailed));
		public string PortalHover { get; } = Compose(nameof(PortalHover));
		public string PortalMain { get; } = Compose(nameof(PortalMain));
		public string PortalSelected { get; } = Compose(nameof(PortalSelected));
		public string PortalShield { get; } = Compose(nameof(PortalShield));
		public string PortalShieldIcon { get; } = Compose(nameof(PortalShieldIcon));
		public string PortalShieldIconError { get; } = Compose(nameof(PortalShieldIconError));
		public string PortalShieldIconOnTopbar { get; } = Compose(nameof(PortalShieldIconOnTopbar));
		public string PortalShieldIconWarning { get; } = Compose(nameof(PortalShieldIconWarning));
		public string PortalShieldModaldialog { get; } = Compose(nameof(PortalShieldModaldialog));
		public string PortalShieldModaldialogOnJumpbar { get; } = Compose(nameof(PortalShieldModaldialogOnJumpbar));
		public string PortalSvg { get; } = Compose(nameof(PortalSvg));
		public string PortalSvgSecondary { get; } = Compose(nameof(PortalSvgSecondary));
		public string PortalText { get; } = Compose(nameof(PortalText));
		public string PortalTextPrimary { get; } = Compose(nameof(PortalTextPrimary));
		public string PortalTip { get; } = Compose(nameof(PortalTip));
		public string PortalTipContent { get; } = Compose(nameof(PortalTipContent));
		public string PortalTitle { get; } = Compose(nameof(PortalTitle));
		public string Progress { get; } = Compose(nameof(Progress));
		public string ProgressAnimated { get; } = Compose(nameof(ProgressAnimated));
		public string Progressbox { get; } = Compose(nameof(Progressbox));
		public string ProgressboxProgressbar { get; } = Compose(nameof(ProgressboxProgressbar));
		public string ProgressboxText { get; } = Compose(nameof(ProgressboxText));
		public string ProgressDots { get; } = Compose(nameof(ProgressDots));
		public string Search { get; } = Compose(nameof(Search));
		public string Searchbox { get; } = Compose(nameof(Searchbox));
		public string SearchExpanded { get; } = Compose(nameof(SearchExpanded));
		public string SearchIcon { get; } = Compose(nameof(SearchIcon));
		public string Searching { get; } = Compose(nameof(Searching));
		public string SearchNoJourneys { get; } = Compose(nameof(SearchNoJourneys));
		public string Settingspane { get; } = Compose(nameof(Settingspane));
		public string SettingspaneApply { get; } = Compose(nameof(SettingspaneApply));
		public string SettingspaneBody { get; } = Compose(nameof(SettingspaneBody));
		public string SettingspaneBottom { get; } = Compose(nameof(SettingspaneBottom));
		public string SettingspaneCancel { get; } = Compose(nameof(SettingspaneCancel));
		public string SettingspaneCustomize { get; } = Compose(nameof(SettingspaneCustomize));
		public string SettingspaneCustomizeIcon { get; } = Compose(nameof(SettingspaneCustomizeIcon));
		public string SettingspaneCustomizeLabel { get; } = Compose(nameof(SettingspaneCustomizeLabel));
		public string SettingspaneHeader { get; } = Compose(nameof(SettingspaneHeader));
		public string SettingspaneItem { get; } = Compose(nameof(SettingspaneItem));
		public string SettingspaneLabel { get; } = Compose(nameof(SettingspaneLabel));
		public string SettingspaneResetlayoutLink { get; } = Compose(nameof(SettingspaneResetlayoutLink));
		public string SettingspaneSeparator { get; } = Compose(nameof(SettingspaneSeparator));
		public string SettingspaneSubfilter { get; } = Compose(nameof(SettingspaneSubfilter));
		public string SettingspaneTheme { get; } = Compose(nameof(SettingspaneTheme));
		public string SettingspaneThemeContainer { get; } = Compose(nameof(SettingspaneThemeContainer));
		public string SettingspaneThemeRadio { get; } = Compose(nameof(SettingspaneThemeRadio));
		public string SettingspaneThemeSelection { get; } = Compose(nameof(SettingspaneThemeSelection));
		public string ShouldUseSingleLine { get; } = Compose(nameof(ShouldUseSingleLine));
		public string ShowJourney { get; } = Compose(nameof(ShowJourney));
		public string ShowStartboard { get; } = Compose(nameof(ShowStartboard));
		public string Sidebar { get; } = Compose(nameof(Sidebar));
		public string SidebarBar { get; } = Compose(nameof(SidebarBar));
		public string SidebarBottom { get; } = Compose(nameof(SidebarBottom));
		public string SidebarBrowse { get; } = Compose(nameof(SidebarBrowse));
		public string SidebarBrowseIcon { get; } = Compose(nameof(SidebarBrowseIcon));
		public string SidebarBrowseLabel { get; } = Compose(nameof(SidebarBrowseLabel));
		public string SidebarBrowseShown { get; } = Compose(nameof(SidebarBrowseShown));
		public string SidebarButtonFlex { get; } = Compose(nameof(SidebarButtonFlex));
		public string SidebarCloud { get; } = Compose(nameof(SidebarCloud));
		public string SidebarCollapseButton { get; } = Compose(nameof(SidebarCollapseButton));
		public string SidebarContent { get; } = Compose(nameof(SidebarContent));
		public string SidebarCreate { get; } = Compose(nameof(SidebarCreate));
		public string SidebarCreateIcon { get; } = Compose(nameof(SidebarCreateIcon));
		public string SidebarCreateLabel { get; } = Compose(nameof(SidebarCreateLabel));
		public string SidebarDefaultviewenabled { get; } = Compose(nameof(SidebarDefaultviewenabled));
		public string SidebarDraggable { get; } = Compose(nameof(SidebarDraggable));
		public string SidebarDroppable { get; } = Compose(nameof(SidebarDroppable));
		public string SidebarExternal { get; } = Compose(nameof(SidebarExternal));
		public string SidebarFavorites { get; } = Compose(nameof(SidebarFavorites));
		public string SidebarFlyout { get; } = Compose(nameof(SidebarFlyout));
		public string SidebarFlyoutIsHidden { get; } = Compose(nameof(SidebarFlyoutIsHidden));
		public string SidebarFlyoutIsOpen { get; } = Compose(nameof(SidebarFlyoutIsOpen));
		public string SidebarHandle { get; } = Compose(nameof(SidebarHandle));
		public string SidebarHome { get; } = Compose(nameof(SidebarHome));
		public string SidebarIcon { get; } = Compose(nameof(SidebarIcon));
		public string SidebarIsCollapsed { get; } = Compose(nameof(SidebarIsCollapsed));
		public string SidebarItem { get; } = Compose(nameof(SidebarItem));
		public string SidebarItemIcon { get; } = Compose(nameof(SidebarItemIcon));
		public string SidebarItemLink { get; } = Compose(nameof(SidebarItemLink));
		public string SidebarLabel { get; } = Compose(nameof(SidebarLabel));
		public string SidebarMiddle { get; } = Compose(nameof(SidebarMiddle));
		public string SidebarShowIfCollapsed { get; } = Compose(nameof(SidebarShowIfCollapsed));
		public string SidebarShowIfExpanded { get; } = Compose(nameof(SidebarShowIfExpanded));
		public string SidebarStar { get; } = Compose(nameof(SidebarStar));
		public string SidebarTop { get; } = Compose(nameof(SidebarTop));
		public string Splashscreen { get; } = Compose(nameof(Splashscreen));
		public string SplashscreenLoaderContainer { get; } = Compose(nameof(SplashscreenLoaderContainer));
		public string SplashscreenLogo { get; } = Compose(nameof(SplashscreenLogo));
		public string Stacklayout { get; } = Compose(nameof(Stacklayout));
		public string StacklayoutChild { get; } = Compose(nameof(StacklayoutChild));
		public string StacklayoutHorizontal { get; } = Compose(nameof(StacklayoutHorizontal));
		public string StacklayoutVertical { get; } = Compose(nameof(StacklayoutVertical));
		public string Startboard { get; } = Compose(nameof(Startboard));
		public string StartboardActions { get; } = Compose(nameof(StartboardActions));
		public string StartboardButton { get; } = Compose(nameof(StartboardButton));
		public string StartboardButtonBrowse { get; } = Compose(nameof(StartboardButtonBrowse));
		public string StartboardButtonClone { get; } = Compose(nameof(StartboardButtonClone));
		public string StartboardButtonContainer { get; } = Compose(nameof(StartboardButtonContainer));
		public string StartboardButtonDelete { get; } = Compose(nameof(StartboardButtonDelete));
		public string StartboardButtonEdit { get; } = Compose(nameof(StartboardButtonEdit));
		public string StartboardButtonFullscreen { get; } = Compose(nameof(StartboardButtonFullscreen));
		public string StartboardButtonIcon { get; } = Compose(nameof(StartboardButtonIcon));
		public string StartboardButtonMigrate { get; } = Compose(nameof(StartboardButtonMigrate));
		public string StartboardButtonNew { get; } = Compose(nameof(StartboardButtonNew));
		public string StartboardButtonShare { get; } = Compose(nameof(StartboardButtonShare));
		public string StartboardButtonText { get; } = Compose(nameof(StartboardButtonText));
		public string StartboardDropdown { get; } = Compose(nameof(StartboardDropdown));
		public string StartboardDropdownBrowseall { get; } = Compose(nameof(StartboardDropdownBrowseall));
		public string StartboardDropdownItem { get; } = Compose(nameof(StartboardDropdownItem));
		public string StartboardDropdownSubscriptions { get; } = Compose(nameof(StartboardDropdownSubscriptions));
		public string StartboardHeader { get; } = Compose(nameof(StartboardHeader));
		public string StartboardHeaderMigration { get; } = Compose(nameof(StartboardHeaderMigration));
		public string StartboardHeaderNormal { get; } = Compose(nameof(StartboardHeaderNormal));
		public string StartboardItemContainer { get; } = Compose(nameof(StartboardItemContainer));
		public string StartboardItemIcon { get; } = Compose(nameof(StartboardItemIcon));
		public string StartboardItemTitle { get; } = Compose(nameof(StartboardItemTitle));
		public string StartboardLayout { get; } = Compose(nameof(StartboardLayout));
		public string StartboardLoadanimation { get; } = Compose(nameof(StartboardLoadanimation));
		public string StartboardLoading { get; } = Compose(nameof(StartboardLoading));
		public string StartboardMessageBody { get; } = Compose(nameof(StartboardMessageBody));
		public string StartboardMessageContainer { get; } = Compose(nameof(StartboardMessageContainer));
		public string StartboardMessageTitle { get; } = Compose(nameof(StartboardMessageTitle));
		public string StartboardMigration { get; } = Compose(nameof(StartboardMigration));
		public string StartboardNotfound { get; } = Compose(nameof(StartboardNotfound));
		public string StartboardTarget { get; } = Compose(nameof(StartboardTarget));
		public string StartboardTitle { get; } = Compose(nameof(StartboardTitle));
		public string StartboardTitleEdit { get; } = Compose(nameof(StartboardTitleEdit));
		public string StartboardTitleNext { get; } = Compose(nameof(StartboardTitleNext));
		public string TextDirty { get; } = Compose(nameof(TextDirty));
		public string TextError { get; } = Compose(nameof(TextError));
		public string TextInfo { get; } = Compose(nameof(TextInfo));
		public string TextLink { get; } = Compose(nameof(TextLink));
		public string TextSuccess { get; } = Compose(nameof(TextSuccess));
		public string TextWarning { get; } = Compose(nameof(TextWarning));
		public string TextWhite { get; } = Compose(nameof(TextWhite));
		public string ThemeAzure { get; } = Compose(nameof(ThemeAzure));
		public string ThemeBlue { get; } = Compose(nameof(ThemeBlue));
		public string ThemeContextStart { get; } = Compose(nameof(ThemeContextStart));
		public string ThemeDark { get; } = Compose(nameof(ThemeDark));
		public string ThemeLight { get; } = Compose(nameof(ThemeLight));
		public string Tile { get; } = Compose(nameof(Tile));
		public string TileActionbar { get; } = Compose(nameof(TileActionbar));
		public string TileActionbarAction { get; } = Compose(nameof(TileActionbarAction));
		public string TileActionbarActionlist { get; } = Compose(nameof(TileActionbarActionlist));
		public string TileActionbarActionPressed { get; } = Compose(nameof(TileActionbarActionPressed));
		public string TileActionbarCommandUnpinfromstartboard { get; } = Compose(nameof(TileActionbarCommandUnpinfromstartboard));
		public string TileActionbarcontainer { get; } = Compose(nameof(TileActionbarcontainer));
		public string TileActions { get; } = Compose(nameof(TileActions));
		public string TileActionsContextmenu { get; } = Compose(nameof(TileActionsContextmenu));
		public string TileContainer { get; } = Compose(nameof(TileContainer));
		public string TileContent { get; } = Compose(nameof(TileContent));
		public string TileOverlay { get; } = Compose(nameof(TileOverlay));
		public string TileProgress { get; } = Compose(nameof(TileProgress));
		public string TileProgressTransparent { get; } = Compose(nameof(TileProgressTransparent));
		public string TileSelected { get; } = Compose(nameof(TileSelected));
		public string TileSelectedfromhover { get; } = Compose(nameof(TileSelectedfromhover));
		public string TilesizeFittocontainer { get; } = Compose(nameof(TilesizeFittocontainer));
		public string TilesizeFullwidthfitheight { get; } = Compose(nameof(TilesizeFullwidthfitheight));
		public string TilesizeHero { get; } = Compose(nameof(TilesizeHero));
		public string TilesizeHerotall { get; } = Compose(nameof(TilesizeHerotall));
		public string TilesizeHerowide { get; } = Compose(nameof(TilesizeHerowide));
		public string TilesizeHerowidefitheight { get; } = Compose(nameof(TilesizeHerowidefitheight));
		public string TilesizeLarge { get; } = Compose(nameof(TilesizeLarge));
		public string TilesizeMini { get; } = Compose(nameof(TilesizeMini));
		public string TilesizeNormal { get; } = Compose(nameof(TilesizeNormal));
		public string TilesizeSmall { get; } = Compose(nameof(TilesizeSmall));
		public string TilesizeTall { get; } = Compose(nameof(TilesizeTall));
		public string TilesizeWide { get; } = Compose(nameof(TilesizeWide));
		public string Toast { get; } = Compose(nameof(Toast));
		public string ToastClose { get; } = Compose(nameof(ToastClose));
		public string ToastContent { get; } = Compose(nameof(ToastContent));
		public string ToastDescription { get; } = Compose(nameof(ToastDescription));
		public string ToastHeader { get; } = Compose(nameof(ToastHeader));
		public string ToastIcon { get; } = Compose(nameof(ToastIcon));
		public string ToastItem { get; } = Compose(nameof(ToastItem));
		public string ToastLink { get; } = Compose(nameof(ToastLink));
		public string ToastProgressbar { get; } = Compose(nameof(ToastProgressbar));
		public string ToastTime { get; } = Compose(nameof(ToastTime));
		public string ToastTitle { get; } = Compose(nameof(ToastTitle));
		public string Topbar { get; } = Compose(nameof(Topbar));
		public string TopbarAvatarmenu { get; } = Compose(nameof(TopbarAvatarmenu));
		public string TopbarButton { get; } = Compose(nameof(TopbarButton));
		public string TopbarConsole { get; } = Compose(nameof(TopbarConsole));
		public string TopbarContent { get; } = Compose(nameof(TopbarContent));
		public string TopbarDashboard { get; } = Compose(nameof(TopbarDashboard));
		public string TopbarDashboardChanged { get; } = Compose(nameof(TopbarDashboardChanged));
		public string TopbarDashboardDiscard { get; } = Compose(nameof(TopbarDashboardDiscard));
		public string TopbarDashboardDoneCustomize { get; } = Compose(nameof(TopbarDashboardDoneCustomize));
		public string TopbarDashboardMessage { get; } = Compose(nameof(TopbarDashboardMessage));
		public string TopbarDashboardSave { get; } = Compose(nameof(TopbarDashboardSave));
		public string TopbarDashboardView { get; } = Compose(nameof(TopbarDashboardView));
		public string TopbarDevmode { get; } = Compose(nameof(TopbarDevmode));
		public string TopbarExitCustomize { get; } = Compose(nameof(TopbarExitCustomize));
		public string TopbarExitCustomizeButton { get; } = Compose(nameof(TopbarExitCustomizeButton));
		public string TopbarExitCustomizeMessage { get; } = Compose(nameof(TopbarExitCustomizeMessage));
		public string TopbarExitdevmode { get; } = Compose(nameof(TopbarExitdevmode));
		public string TopbarFeedback { get; } = Compose(nameof(TopbarFeedback));
		public string TopbarHelpmenu { get; } = Compose(nameof(TopbarHelpmenu));
		public string TopbarHome { get; } = Compose(nameof(TopbarHome));
		public string TopbarInput { get; } = Compose(nameof(TopbarInput));
		public string TopbarInternal { get; } = Compose(nameof(TopbarInternal));
		public string TopbarJourneyIcon { get; } = Compose(nameof(TopbarJourneyIcon));
		public string TopbarNotifications { get; } = Compose(nameof(TopbarNotifications));
		public string TopbarReportbug { get; } = Compose(nameof(TopbarReportbug));
		public string TopbarSearch { get; } = Compose(nameof(TopbarSearch));
		public string TopbarSettings { get; } = Compose(nameof(TopbarSettings));
		public string TopbarToast { get; } = Compose(nameof(TopbarToast));
		public string Trim { get; } = Compose(nameof(Trim));
		public string TrimBorder { get; } = Compose(nameof(TrimBorder));
		public string TrimBtn { get; } = Compose(nameof(TrimBtn));
		public string TrimHover { get; } = Compose(nameof(TrimHover));
		public string TrimSelected { get; } = Compose(nameof(TrimSelected));
		public string TrimSvg { get; } = Compose(nameof(TrimSvg));
		public string TrimSvgSecondary { get; } = Compose(nameof(TrimSvgSecondary));
		public string TrimText { get; } = Compose(nameof(TrimText));
		public string TrimTextPrimary { get; } = Compose(nameof(TrimTextPrimary));
		public string TrimTitle { get; } = Compose(nameof(TrimTitle));

		public ClassesWorkaround Workaround { get; } = new ClassesWorkaround();

		public sealed class ClassesWorkaround
		{
			public string MsPortalFxSvgFlipHorizontal { get; } = "msportalfx-svg-flip-horizontal";

			// BUG: this class in css has invalid name "fxs-dropmenu-defaultWidth"
			public string DropmenuDefaultWidth { get; } = "fxs-dropmenu-defaultWidth";

			public string Base { get; } = "fxc-base";
		}
	}
}